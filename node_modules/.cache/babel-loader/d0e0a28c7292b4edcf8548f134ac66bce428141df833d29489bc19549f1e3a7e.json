{"ast":null,"code":"export default {\n  data() {\n    return {\n      plcs: [{\n        name: 'PLC 1',\n        addresses: [{\n          name: 'Address 1',\n          bitAddresses: ['Bit 1', 'Bit 2']\n        }\n        // ... other addresses\n        ]\n      }\n      // ... other PLCs\n      ],\n\n      selectedPlc: null,\n      selectedAddress: null,\n      selectedBitAddress: null\n    };\n  },\n  methods: {\n    selectPlc() {\n      this.selectedAddress = null;\n      this.selectedBitAddress = null;\n    },\n    selectAddress() {\n      this.selectedBitAddress = null;\n    },\n    getBitAddresses(plcIndex, addressIndex) {\n      if (plcIndex !== null && addressIndex !== null) {\n        return this.plcs[plcIndex].addresses[addressIndex].bitAddresses;\n      }\n      return [];\n    }\n  }\n};","map":{"version":3,"names":["data","plcs","name","addresses","bitAddresses","selectedPlc","selectedAddress","selectedBitAddress","methods","selectPlc","selectAddress","getBitAddresses","plcIndex","addressIndex"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <select v-model=\"selectedPlc\" @change=\"selectPlc\">\r\n        <option value=\"\">Select PLC</option>\r\n        <option v-for=\"(plc, index) in plcs\" :value=\"index\">{{ plc.name }}</option>\r\n      </select>\r\n  \r\n      <select v-model=\"selectedAddress\" @change=\"selectAddress\" v-if=\"selectedPlc !== null\">\r\n        <option value=\"\">Select Address</option>\r\n        <option v-for=\"(address, index) in plcs[selectedPlc].addresses\" :value=\"index\">{{ address.name }}</option>\r\n      </select>\r\n  \r\n      <select v-model=\"selectedBitAddress\" v-if=\"selectedAddress !== null\">\r\n        <option value=\"\">Select Bit Address</option>\r\n        <option v-for=\"bitAddress in getBitAddresses(selectedPlc, selectedAddress)\" :value=\"bitAddress\">\r\n          {{ bitAddress }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        selectedPlc: null,\r\n        selectedAddress: null,\r\n        selectedBitAddress: null\r\n      };\r\n    },\r\n    methods: {\r\n      selectPlc() {\r\n        this.selectedAddress = null;\r\n        this.selectedBitAddress = null;\r\n      },\r\n      selectAddress() {\r\n        this.selectedBitAddress = null;\r\n      },\r\n      getBitAddresses(plcIndex, addressIndex) {\r\n        if (plcIndex !== null && addressIndex !== null) {\r\n          return this.plcs[plcIndex].addresses[addressIndex].bitAddresses;\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":"AAsBE,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,IAAI,EAAE,CACJ;QACEC,IAAI,EAAE,OAAO;QACbC,SAAS,EAAE,CACT;UACED,IAAI,EAAE,WAAW;UACjBE,YAAY,EAAE,CAAC,OAAO,EAAE,OAAO;QACjC;QACA;QAAA;MAEJ;MACA;MAAA,CACD;;MACDC,WAAW,EAAE,IAAI;MACjBC,eAAe,EAAE,IAAI;MACrBC,kBAAkB,EAAE;IACtB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAAA,EAAG;MACV,IAAI,CAACH,eAAc,GAAI,IAAI;MAC3B,IAAI,CAACC,kBAAiB,GAAI,IAAI;IAChC,CAAC;IACDG,aAAaA,CAAA,EAAG;MACd,IAAI,CAACH,kBAAiB,GAAI,IAAI;IAChC,CAAC;IACDI,eAAeA,CAACC,QAAQ,EAAEC,YAAY,EAAE;MACtC,IAAID,QAAO,KAAM,IAAG,IAAKC,YAAW,KAAM,IAAI,EAAE;QAC9C,OAAO,IAAI,CAACZ,IAAI,CAACW,QAAQ,CAAC,CAACT,SAAS,CAACU,YAAY,CAAC,CAACT,YAAY;MACjE;MACA,OAAO,EAAE;IACX;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}