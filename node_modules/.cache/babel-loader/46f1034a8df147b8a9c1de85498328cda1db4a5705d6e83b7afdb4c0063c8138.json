{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = {\n  class: \"navbar\"\n};\nconst _hoisted_4 = {\n  class: \"logout\"\n};\nconst _hoisted_5 = {\n  class: \"main\",\n  style: {\n    \"margin-top\": \"50px\",\n    \"color\": \"white\"\n  }\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Level 2 PLC \", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_9 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_10 = {\n  class: \"modal-content\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Success!\", -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Your data has been saved successfully.\", -1 /* HOISTED */);\nconst _hoisted_13 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_14 = {\n  class: \"modal-content\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Confirm Delete?\", -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete this data?\", -1 /* HOISTED */);\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_18 = {\n  width: \"60%\"\n};\nconst _hoisted_19 = [\"onClick\"];\nconst _hoisted_20 = {\n  width: \"20%\"\n};\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = {\n  width: \"20%\"\n};\nconst _hoisted_23 = [\"onClick\"];\nconst _hoisted_24 = [\"onSubmit\"];\nconst _hoisted_25 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"newToken\"\n}, \"Hardware Token:\", -1 /* HOISTED */);\nconst _hoisted_26 = [\"onUpdate:modelValue\"];\nconst _hoisted_27 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_28 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\",\n  class: \"purple-save-button\"\n}, \"Save\", -1 /* HOISTED */);\nconst _hoisted_29 = [\"onClick\"];\nconst _hoisted_30 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_31 = {\n  class: \"modal-content\"\n};\nconst _hoisted_32 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Success!\", -1 /* HOISTED */);\nconst _hoisted_33 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Your data has been saved successfully.\", -1 /* HOISTED */);\nconst _hoisted_34 = {\n  key: 0\n};\nconst _hoisted_35 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"center\",\n    \"background-color\": \"#2980b9\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"dropdown-button\"\n}, \"Digital\")])], -1 /* HOISTED */);\nconst _hoisted_36 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"td\", {\n  style: {\n    \"text-align\": \"center\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"button\", {\n  class: \"dropdown-button\"\n}, \"Analog\")])], -1 /* HOISTED */);\nconst _hoisted_37 = [_hoisted_35, _hoisted_36];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"User ID: \" + _toDisplayString($data.userID), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Token: \" + _toDisplayString($data.userToken), 1 /* TEXT */)]), _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.selectedLevel = 'Level 5 ERP')\n  }, \"Level 5 ERP\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.selectedLevel = 'Level 4 WMS')\n  }, \"Level 4 WMS\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.selectedLevel = 'Level 4 MES')\n  }, \"Level 4 MES\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.selectedLevel = 'Level 3 SCADA/ HMI')\n  }, \"Level 3 SCADA/ HMI\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.selectedLevel = 'Level 2 PLC')\n  }, \"Level 2 PLC\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.selectedLevel = 'Level 1 Sensor and Actuator')\n  }, \"Level 1 Sensor and Actuator\"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[6] || (_cache[6] = (...args) => _ctx.logout && _ctx.logout(...args))\n  }, \"Logout\")])]), _createElementVNode(\"div\", _hoisted_5, [_hoisted_6, _hoisted_7, _hoisted_8, _createCommentVNode(\" \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" Form \"), $data.successModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_9, [_createElementVNode(\"div\", _hoisted_10, [_hoisted_11, _hoisted_12, _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closeSuccessModal && $options.closeSuccessModal(...args))\n  }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Confirmation Modal \"), _ctx.confirmationModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _hoisted_16, _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.confirmDelete && _ctx.confirmDelete(...args))\n  }, \"Delete\"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.cancelDelete && _ctx.cancelDelete(...args))\n  }, \"Cancel\")])])) : _createCommentVNode(\"v-if\", true), _hoisted_17, _createCommentVNode(\"\"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcItems, (plc, plcIndex) => {\n    return _openBlock(), _createElementBlock(\"table\", {\n      key: plcIndex\n    }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", _hoisted_18, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleDropdown(plcIndex)\n    }, _toDisplayString(plc.name), 9 /* TEXT, PROPS */, _hoisted_19)]), _createElementVNode(\"td\", _hoisted_20, [_createElementVNode(\"button\", {\n      onClick: $event => $options.showDeletePLCConfirmation(plcIndex),\n      class: \"red-alert-button\",\n      style: {\n        \"margin-left\": \"30px\"\n      }\n    }, \"Delete PLC\", 8 /* PROPS */, _hoisted_21)]), _createElementVNode(\"td\", _hoisted_22, [_createElementVNode(\"button\", {\n      onClick: $event => $options.editPLCToken(plc),\n      class: \"ocean-blue-edit-button\",\n      style: {\n        \"margin-left\": \"30px\"\n      }\n    }, \"Edit Token\", 8 /* PROPS */, _hoisted_23), plc.editingToken ? (_openBlock(), _createElementBlock(\"form\", {\n      key: 0,\n      onSubmit: _withModifiers($event => $options.savePLCToken(plc), [\"prevent\"])\n    }, [_hoisted_25, _withDirectives(_createElementVNode(\"input\", {\n      \"onUpdate:modelValue\": $event => plc.newToken = $event,\n      id: \"newToken\",\n      style: {\n        \"line-height\": \"28px\"\n      },\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_26), [[_vModelText, plc.newToken]]), _hoisted_27, _hoisted_28, _createElementVNode(\"button\", {\n      onClick: $event => $options.cancelEditPLCToken(plc),\n      class: \"dark-cancel-button\"\n    }, \"Cancel\", 8 /* PROPS */, _hoisted_29), _createCommentVNode(\" Success Modal \"), $data.successModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_30, [_createElementVNode(\"div\", _hoisted_31, [_hoisted_32, _hoisted_33, _createElementVNode(\"button\", {\n      onClick: _cache[10] || (_cache[10] = (...args) => $options.closeSuccessModal && $options.closeSuccessModal(...args))\n    }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_24)) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\"  \")]), plc.showDropdown ? (_openBlock(), _createElementBlock(\"table\", _hoisted_34, _hoisted_37)) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"-\\n        <table v-if=\\\"plc.showDropdown\\\">\\n          <thead>\\n            <tr>\\n              <th>Address</th>\\n              <th>Description</th>\\n              <th>Token</th>\\n              <th>PLC ID</th>\\n              <th>Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr v-for=\\\"(address, addressIndex) in plc.addresses\\\" :key=\\\"addressIndex\\\">\\n              <td>{{ address.name }}</td>\\n              <td v-if=\\\"!address.editing\\\">{{ address.description }}</td>\\n              <td v-else><input v-model=\\\"address.description\\\" @keyup.enter=\\\"saveAddress(address)\\\" @blur=\\\"saveAddress(address)\\\" placeholder=\\\"Address description\\\"  style=\\\"line-height: 28px;\\\" ></td>\\n              <td>{{ plc.token }}</td>\\n              <td>{{ plc.id }}</td>\\n              <td>\\n                <button @click=\\\"showDeleteConfirmation(plcIndex, addressIndex)\\\" class=\\\"red-alert-button\\\">Delete</button>\\n                <br>\\n                <button v-if=\\\"!address.editing\\\" @click=\\\"editAddress(address)\\\" class=\\\"ocean-blue-edit-button\\\">&nbsp&nbspEdit&nbsp&nbsp</button>\\n                <template v-else>\\n                  <button @click=\\\"saveAddress(address)\\\" class=\\\"purple-save-button\\\">Save</button>\\n                  <button @click=\\\"cancelEdit(address)\\\" class=\\\"dark-cancel-button\\\">Cancel</button>\\n                </template>\\n              </td>\\n            </tr>\\n          </tbody>\\n          <tfoot>\\n            <tr>\\n              <td>\\n                <input v-model=\\\"newAddress.name\\\"   style=\\\"line-height: 28px;\\\" placeholder=\\\"Address name\\\">\\n              </td>\\n              <td>\\n                <input v-model=\\\"newAddress.description\\\"  style=\\\"line-height: 28px;\\\" placeholder=\\\"Address description\\\">\\n              </td>\\n              <td>\\n                {{ plc.token }}\\n              </td>\\n              <td>\\n                {{ plc.id }}\\n              </td>\\n              <td>\\n                <button @click=\\\"addAddress(plcIndex)\\\" class=\\\"grass-green-add-button\\\">Add Address</button>\\n              </td>\\n            </tr>\\n          </tfoot>\\n        </table>\\n\\n      \")]);\n  }), 128 /* KEYED_FRAGMENT */)), _createElementVNode(\"div\", null, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[11] || (_cache[11] = $event => $data.newPLCName = $event),\n    style: {\n      \"line-height\": \"28px\"\n    },\n    placeholder: \"PLC name\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPLCName]]), _withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.newPLCToken = $event),\n    style: {\n      \"margin-left\": \"30px\",\n      \"line-height\": \"28px\"\n    },\n    placeholder: \"PLC token\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPLCToken]]), _createElementVNode(\"button\", {\n    onClick: _cache[13] || (_cache[13] = (...args) => $options.addPLC && $options.addPLC(...args)),\n    class: \"grass-green-add-button\",\n    style: {\n      \"margin-left\": \"30px\"\n    }\n  }, \"Add PLC\")])])]);\n}","map":{"version":3,"names":["id","class","style","_createElementVNode","width","for","type","_hoisted_35","_hoisted_36","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","userID","userToken","_hoisted_3","href","onClick","_cache","$event","_ctx","selectedLevel","_hoisted_4","args","logout","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_createCommentVNode","successModalVisible","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","$options","closeSuccessModal","confirmationModalVisible","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","confirmDelete","cancelDelete","_hoisted_17","_Fragment","_renderList","plcItems","plc","plcIndex","key","_hoisted_18","toggleDropdown","name","_hoisted_19","_hoisted_20","showDeletePLCConfirmation","_hoisted_21","_hoisted_22","editPLCToken","_hoisted_23","editingToken","onSubmit","_withModifiers","savePLCToken","_hoisted_25","newToken","required","_hoisted_27","_hoisted_28","cancelEditPLCToken","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","showDropdown","_hoisted_34","_hoisted_37","newPLCName","placeholder","newPLCToken","addPLC"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n\n\n\n\n\n<div id=\"app\">\n  \n    <div class=\"sidebar\">\n      <p>User ID: {{ userID }}</p>\n      <p>Token: {{ userToken }}</p>\n    </div>\n    <div class=\"navbar\">\n        <a href=\"#\" @click=\"selectedLevel = 'Level 5 ERP'\">Level 5 ERP</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 4 WMS'\">Level 4 WMS</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 4 MES'\">Level 4 MES</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 3 SCADA/ HMI'\">Level 3 SCADA/ HMI</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 2 PLC'\">Level 2 PLC</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 1 Sensor and Actuator'\">Level 1 Sensor and Actuator</a>\n\n      <div class=\"logout\">\n        <a href=\"#\" @click=\"logout\">Logout</a>\n      </div>\n\n      </div>\n\n    <div class=\"main\" style=\"margin-top:50px; color:white;\">\n      <h2>Level 2 PLC </h2>\n      <br>\n      <br>\n      <!-- -->\n\n\n\n\n\n\n      <div>\n    <!-- Form -->\n\n    <div v-if=\"successModalVisible\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h2>Success!</h2>\n        <p>Your data has been saved successfully.</p>\n        <button @click=\"closeSuccessModal\">Close</button>\n      </div>\n    </div>\n  </div>\n\n\n\n\n  <!-- Confirmation Modal -->\n  <div v-if=\"confirmationModalVisible\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h2>Confirm Delete?</h2>\n        <p>Are you sure you want to delete this data?</p>\n        <button @click=\"confirmDelete\">Delete</button>\n        <button @click=\"cancelDelete\">Cancel</button>\n      </div>\n    </div>\n\n    \n  <br>\n\n\n\n\n\n\n\n\n\n\n      <!---->\n      <table v-for=\"(plc, plcIndex) in plcItems\" :key=\"plcIndex\">\n        <tr>\n            <td width=\"60%\"><button @click=\"toggleDropdown(plcIndex)\">{{ plc.name }}</button></td>\n            <td width=\"20%\"><button @click=\"showDeletePLCConfirmation(plcIndex)\" class=\"red-alert-button\" style=\"margin-left:30px;\">Delete PLC</button></td>\n            <td width=\"20%\"><button @click=\"editPLCToken(plc)\"  class=\"ocean-blue-edit-button\"  style=\"margin-left: 30px;\">Edit Token</button>\n            \n            \n              <form v-if=\"plc.editingToken\" @submit.prevent=\"savePLCToken(plc)\">\n                  <label for=\"newToken\">Hardware Token:</label>\n                  <input v-model=\"plc.newToken\" id=\"newToken\" style=\"line-height: 28px;\" required>\n                  <br>\n                  <button type=\"submit\" class=\"purple-save-button\">Save</button>\n                  <button @click=\"cancelEditPLCToken(plc)\" class=\"dark-cancel-button\">Cancel</button>\n\n\n                                      <!-- Success Modal -->\n                    <div v-if=\"successModalVisible\" class=\"modal\">\n                      <div class=\"modal-content\">\n                        <h2>Success!</h2>\n                        <p>Your data has been saved successfully.</p>\n                        <button @click=\"closeSuccessModal\">Close</button>\n                      </div>\n                    </div>\n\n\n\n              </form>\n            </td>\n                \n          \n\n                    <!--  -->\n           \n          </tr>\n          <table v-if=\"plc.showDropdown\">\n            <tr>\n              <td style=\"  text-align: center;   background-color: #2980b9;\">\n                <button class=\"dropdown-button\">Digital</button>\n              </td>\n            </tr>\n            <tr>\n              <td style=\"  text-align: center;\">\n                <button class=\"dropdown-button\">Analog</button>\n              </td>\n            </tr>\n          </table>\n          \n<!---\n        <table v-if=\"plc.showDropdown\">\n          <thead>\n            <tr>\n              <th>Address</th>\n              <th>Description</th>\n              <th>Token</th>\n              <th>PLC ID</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr v-for=\"(address, addressIndex) in plc.addresses\" :key=\"addressIndex\">\n              <td>{{ address.name }}</td>\n              <td v-if=\"!address.editing\">{{ address.description }}</td>\n              <td v-else><input v-model=\"address.description\" @keyup.enter=\"saveAddress(address)\" @blur=\"saveAddress(address)\" placeholder=\"Address description\"  style=\"line-height: 28px;\" ></td>\n              <td>{{ plc.token }}</td>\n              <td>{{ plc.id }}</td>\n              <td>\n                <button @click=\"showDeleteConfirmation(plcIndex, addressIndex)\" class=\"red-alert-button\">Delete</button>\n                <br>\n                <button v-if=\"!address.editing\" @click=\"editAddress(address)\" class=\"ocean-blue-edit-button\">&nbsp&nbspEdit&nbsp&nbsp</button>\n                <template v-else>\n                  <button @click=\"saveAddress(address)\" class=\"purple-save-button\">Save</button>\n                  <button @click=\"cancelEdit(address)\" class=\"dark-cancel-button\">Cancel</button>\n                </template>\n              </td>\n            </tr>\n          </tbody>\n          <tfoot>\n            <tr>\n              <td>\n                <input v-model=\"newAddress.name\"   style=\"line-height: 28px;\" placeholder=\"Address name\">\n              </td>\n              <td>\n                <input v-model=\"newAddress.description\"  style=\"line-height: 28px;\" placeholder=\"Address description\">\n              </td>\n              <td>\n                {{ plc.token }}\n              </td>\n              <td>\n                {{ plc.id }}\n              </td>\n              <td>\n                <button @click=\"addAddress(plcIndex)\" class=\"grass-green-add-button\">Add Address</button>\n              </td>\n            </tr>\n          </tfoot>\n        </table>\n\n      -->\n      </table>\n\n\n\n\n      \n      <div>\n        <input v-model=\"newPLCName\"  style=\"line-height: 28px;\" placeholder=\"PLC name\">\n        <input v-model=\"newPLCToken\" style=\" margin-left:30px; line-height: 28px;\" placeholder=\"PLC token\">\n        <button @click=\"addPLC\" class=\"grass-green-add-button\" style=\"margin-left:30px;\">Add PLC</button>\n      </div>\n    </div>\n  </div>\n\n\n\n</template>\n\n<script>\nimport {onMounted, ref} from \"vue\";\nimport axios from \"axios\";\nimport {useRouter} from \"vue-router\";\nimport VueCookies from 'vue-cookies';\n\nexport default{\n  name: \"Home\",\n  \n  data() {\n    return{\n      formData: {\n        name: \"\",\n        email: \"\",\n        // Add more form fields as needed\n      },\n      responseData: null,\n      error: null,\n      successModalVisible: false,\n      userID: 'User123', // Replace 'User123' with your user ID\n        userToken: 'UserToken123', // Replace 'UserToken123' with your user token\n        plcItems: [\n          {\n            id: 1,\n            name: 'Primary Treatment Plant Tank 1 (OMRON PLC)',\n            token: 'Token 1',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '101', description: 'Pressure Alarm', editing: false },\n              { name: '102', description: 'pH Alarm', editing: false },\n              { name: '103', description: 'Temperature Alarm', editing: false },\n              { name: '104', description: 'Level Alarm', editing: false },\n              { name: '105', description: 'Security Alarm', editing: false },\n              { name: '106', description: 'Fire Alarm', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 2,\n            name: 'Primary Treatment Plant Tank 2 (Siemen PLC)',\n            token: 'Token 2',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '0', description: 'Description for Address 1 in PLC 2', editing: false },\n              { name: '1', description: 'Description for Address 2 in PLC 2', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 3,\n            name: 'Primary Treatment Plant Tank 3 (Delta PLC)',\n            token: 'Token 3',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 3', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 3', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 4,\n            name: 'Secondary Treatment Plant Tank 1 (Mitsubushi PLC)',\n            token: 'Token 4',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 5,\n            name: 'Secondary Treatment Plant Tank 2 (ABB PLC)',\n            token: 'Token 5',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 6,\n            name: 'Secondary Treatment Plant Tank 3 (Burkert PLC)',\n            token: 'Token 6',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 7,\n            name: 'Tertiary Treatment Plant Tank 1 (Amsamotion PLC)',\n            token: 'Token 7',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 8,\n            name: 'Tertiary Treatment Plant Tank 2 (HFCA PLC)',\n            token: 'Token 8',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 9,\n            name: 'Tertiary Treatment Plant Tank 3 (Allen Bradley PLC)',\n            token: 'Token 9',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 10,\n            name: 'Advanced Treatment Plant Tank 1 (Schneider PLC)',\n            token: 'Token 10',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 11,\n            name: 'Advanced Treatment Plant Tank 2 (Toshiba PLC)',\n            token: 'Token 11',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 12,\n            name: 'Advanced Treatment Plant Tank 3 (Keyence PLC)',\n            token: 'Token 12',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: 'Address 1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: 'Address 2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          // Add more PLC items here as needed\n        ],\n        newPLCName: '',\n        newPLCToken: '',\n        newAddress: { name: '', description: '' },\n    }\n  },\n  mounted() {\n    // Making a GET request\n    axios.get('http://localhost:8089/plc')\n      .then(response => {\n        this.responseData = response.data;\n        for (let i = 0; i < response.data.length; i++) {\n          console.log(response.data[i].name);\n        }\n        //console.log(response.data[0].addresses[0]);\n        //console.log(response.data[0].name);\n      })\n      .catch(error => {\n        this.error = error.message;\n      });\n  },\n  methods: {\n    showDeleteConfirmation(plcIndex, addressIndex) {\n    const confirmed = confirm(\"Are you sure you want to delete this address?\");\n    if (confirmed) {\n      this.deleteAddress(plcIndex, addressIndex);\n    }\n  },\n//\nsaveData() {\n      // Simulate saving data to the server (replace this with your actual API call)\n      // For example, using Axios:\n      // axios.post('/api/saveData', this.formData)\n      //   .then((response) => {\n      //     // Handle success\n      //     this.showSuccessModal();\n      //     // Clear the form data after successful submission\n      //     this.formData = {};\n      //   })\n      //   .catch((error) => {\n      //     // Handle error\n      //   });\n\n      // Simulate success for this example\n      this.showSuccessModal();\n      this.formData = {}; // Clear the form data after successful submission\n    },\n    showSuccessModal() {\n      this.successModalVisible = true;\n    },\n    closeSuccessModal() {\n      this.successModalVisible = false;\n    },\n  \n\n\n//\n  \n    toggleDropdown(plcIndex) {\n          this.plcItems[plcIndex].showDropdown = !this.plcItems[plcIndex].showDropdown;\n        },\n        deletePLC(plcIndex) {\n          this.plcItems.splice(plcIndex, 1);\n        },\n        addPLC() {\n          if (this.newPLCName.trim() !== '' && this.newPLCToken.trim() !== '') {\n                  const isDuplicateToken = this.plcItems.some(\n                (plcItem) => plcItem.token === this.newPLCToken\n              );\n\n              if (isDuplicateToken) {\n                // Display an error message or take any action to handle the duplicate token\n                alert('Token is already used in another PLC. Please use a different token.');\n                return;\n              }\n\n\n            this.plcItems.push({\n              id: this.plcItems.length + 1,\n              name: this.newPLCName,\n              token: this.newPLCToken,\n              editingToken: false,\n              newToken: '',\n              showDropdown: false,\n              addresses: [],\n            });\n            this.newPLCName = '';\n            this.newPLCToken = '';\n            \n          }\n        },\n        addAddress(plcIndex) {\n          if (this.newAddress.name.trim() !== '' && this.newAddress.description.trim() !== '') {\n            this.plcItems[plcIndex].addresses.push({\n              name: this.newAddress.name,\n              description: this.newAddress.description,\n              editing: false,\n            });\n            this.newAddress = { name: '', description: '' };\n          }\n        },\n        deleteAddress(plcIndex, addressIndex) {\n          this.plcItems[plcIndex].addresses.splice(addressIndex, 1);\n        },\n        editAddress(address) {\n          address.editing = true;\n        },\n        saveAddress(address) {\n          address.editing = false;\n          this.showSuccessModal();\n\n        },\n        cancelEdit(address) {\n          address.editing = false;\n        },\n        editPLCToken(plc) {\n          plc.editingToken = true;\n          plc.newToken = plc.token;\n        },\n\n       savePLCToken(plc) {\n      // Check if the new token is not already used in any other PLC\n      const isDuplicateToken = this.plcItems.some(\n        (plcItem) => plcItem !== plc && plcItem.token === plc.newToken\n      );\n\n      if (isDuplicateToken) {\n        // Display an error message or take any action to handle the duplicate token\n        alert('Token is already used in another PLC. Please use a different token.');\n        return;\n      }\n\n      plc.token = plc.newToken;\n      plc.editingToken = false;\n      plc.newToken = '';\n      this.showSuccessModal();\n    },\n\n\n        cancelEditPLCToken(plc) {\n          plc.editingToken = false;\n          plc.newToken = '';\n        },\n\n        showDeletePLCConfirmation(plcIndex) {\n        const confirmed = confirm(\"Are you sure you want to delete this PLC?\");\n        if (confirmed) {\n          this.deletePLC(plcIndex);\n        }\n      },\n\n  },\n  \n}\n\n\n</script>\n\n<style>\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999; /* Set the z-index to place the modal on top */\n  }\n\n  .modal-content {\n    background-color: #fde2e8; /* Set the background color to white-pink */\n    border: 2px solid #ff1493; /* Add a 2px border with pink color */\n    padding: 20px;\n    border-radius: 5px;\n    color:black;\n  }\n\n\n  .modal-content button {\n    /* Add styles for the \"Close\" button */\n    border: 1px solid #000; /* Black border */\n    padding: 8px 12px; /* Adjust padding as needed */\n    background-color: #fff; /* White background */\n    color: #000; /* Black text color */\n    cursor: pointer;\n    border-radius: 5px;\n  }\n\n  .modal-content button:hover {\n    background-color: #000; /* Change background color on hover */\n    color: #fff; /* Change text color on hover */\n  }\n\n/* Styling for the black alert button */\n.dark-cancel-button {\n  padding: 10px 20px;\n  background-color: black; /* Change the background color to black */\n  color: white;\n  border: 2px solid darkgray; /* Change the border color to a darker shade of gray */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.dark-cancel-button:hover {\n  background-color: darkgray; /* Change the hover background color to a darker shade of gray */\n}\n\n/* On click effect */\n.dark-cancel-button:active {\n  background-color: dimgray; /* Use a darker shade of gray on click */\n}\n\n\n\n/* Styling for the purple alert button */\n.purple-save-button {\n  padding: 10px 20px;\n  background-color: purple; /* Change the background color to purple */\n  color: white;\n  border: 2px solid darkpurple; /* Change the border color to a darker shade of purple */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.purple-save-button:hover {\n  background-color: darkpurple; /* Change the hover background color to a darker shade of purple */\n}\n\n/* On click effect */\n.purple-save-button:active {\n  background-color: #800080; /* Use a darker shade of purple on click (here using hex code) */\n}\n\n\n\n\n/* Styling for the grass green alert button */\n.grass-green-add-button {\n  padding: 10px 20px;\n  background-color: #3CB371; /* Use your preferred grass green color code */\n  color: white;\n  border: 2px solid #2E8B57; /* Use a slightly darker shade of grass green for the border */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.grass-green-add-button:hover {\n  background-color: #2E8B57; /* Use a slightly darker shade of grass green on hover */\n}\n\n/* On click effect */\n.grass-green-add-button:active {\n  background-color: #228B22; /* Use a darker shade of grass green on click */\n}\n\n\n/* Styling for the ocean blue alert button */\n.ocean-blue-edit-button {\n  padding: 10px 20px;\n  background-color: #007BAC; /* Use your preferred ocean blue color code */\n  color: white;\n  border: 2px solid #005A80; /* Use a slightly darker shade of ocean blue for the border */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.ocean-blue-edit-button:hover {\n  background-color: #005A80; /* Use a slightly darker shade of ocean blue on hover */\n}\n\n/* On click effect */\n.ocean-blue-edit-button:active {\n  background-color: #00416A; /* Use a darker shade of ocean blue on click */\n}\n\n/* Styling for the red alert button */\n.red-alert-button {\n  padding: 10px 20px;\n  background-color: red;\n  color: white;\n  border: 2px solid darkred;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.red-alert-button:hover {\n  background-color: darkred;\n}\n\n/* On click effect */\n.red-alert-button:active {\n  background-color: crimson;\n}\n\n\n/* Sidebar styles */\n.sidebar {\n  height: 100%;\n  width: 200px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  background-color: #111;\n  padding-top: 20px;\n}\n\n.sidebar a {\n  display: block;\n  color: white;\n  padding: 16px;\n  text-decoration: none;\n}\n\n.sidebar a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n/* Main content styles */\n.main {\n  margin-left: 200px; /* Same as the width of the sidebar */\n  padding: 20px;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\nth, td {\n  border: 1px solid black;\n  padding: 8px;\n  text-align: left;\n}\n\n\n/* Navbar styles */\n.navbar {\n  background-color: #333;\n  overflow: hidden;\n  width: 100%;\n  position: fixed; /* Position the navbar as fixed */\n  top: 0; /* Place the navbar at the top */\n  left: 200px; /* Align with the sidebar */\n  z-index: 2; /* Add z-index to position the navbar above the main content */\n}\n\n.navbar a {\n  float: left;\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n}\n\n.navbar a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n/* Right-aligned logout button */\n.logout {\n  display: flex;\n  align-items: center;\n}\n\n.logout a {\n  color: white;\n  padding: 14px 16px;\n  text-decoration: none;\n}\n\n.logout a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n\n\n/* Style for the dropdown buttons */\n.dropdown-button {\n  margin-top: 10px; /* Add margin to the top */\n  margin-bottom: 10px; /* Add margin to the bottom */\n  padding: 5px 10px; /* Adjust padding as needed */\n  color: black; /* Black text color */\n  cursor: pointer;\n  border-radius: 5px;\n  text-align: center; /* Center-align the button content */\n\n}\n\n\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}