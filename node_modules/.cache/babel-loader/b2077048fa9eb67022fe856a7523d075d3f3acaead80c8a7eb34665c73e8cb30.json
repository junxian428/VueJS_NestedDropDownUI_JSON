{"ast":null,"code":"export default {\n  data() {\n    return {\n      bitAddress: [{\n        bitAddress: 100.00\n      }, {\n        bitAddress: 100.00\n      }],\n      jsonData: [{\n        id: 1,\n        name: 'PLC 1',\n        analog: 'Analog 1',\n        digital: 'Digital 1',\n        showAnalogDropdown: false,\n        showDigitalDropdown: false,\n        showAnalogAndDigital: false,\n        showBitAddress: false\n      }, {\n        id: 2,\n        name: 'PLC 2',\n        analog: 'Analog 2',\n        digital: 'Digital 2',\n        showAnalogDropdown: false,\n        showDigitalDropdown: false,\n        showAnalogAndDigital: false,\n        showBitAddress: false\n      }\n      // Add more items as needed\n      ]\n    };\n  },\n\n  methods: {\n    toggleDropdown(type, id) {\n      const index = this.jsonData.findIndex(item => item.id === id);\n      if (index !== -1) {\n        if (type === 'both') {\n          this.jsonData[index].showAnalogAndDigital = !this.jsonData[index].showAnalogAndDigital;\n          this.jsonData[index].showAnalogDropdown = false;\n          this.jsonData[index].showDigitalDropdown = false;\n        } else if (type === 'analog') {\n          this.jsonData[index].showAnalogDropdown = !this.jsonData[index].showAnalogDropdown;\n          this.jsonData[index].showDigitalDropdown = false;\n        } else if (type === 'digital') {\n          this.jsonData[index].showDigitalDropdown = !this.jsonData[index].showDigitalDropdown;\n          this.jsonData[index].showAnalogDropdown = false;\n        } else if (type === 'bitaddress') {\n          this.jsonData[index].showBitAddress = !this.jsonData[index].showBitAddress;\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","bitAddress","jsonData","id","name","analog","digital","showAnalogDropdown","showDigitalDropdown","showAnalogAndDigital","showBitAddress","methods","toggleDropdown","type","index","findIndex","item"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog_V2\\src\\views\\test2.vue"],"sourcesContent":["<template>\r\n\r\n\r\n\r\n\r\n\r\n    <div id=\"app\">\r\n      \r\n    \r\n      <div class=\"sidebar\">\r\n          <p>User ID: </p>\r\n          <p>Token: </p>\r\n          <br>\r\n          <div class=\"sidebar-content\">\r\n    \r\n            <p style=\"color:white;\"><button><a href=\"#/\">IoT Dashboard</a></button></p>\r\n            <br>\r\n    \r\n          <p style=\"color:white;\"><u>Supported Protocol</u></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/MQTT\">MQTT Mosquitto Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">AWS IoT Core Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/HTTPS\">HTTPS API Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/GRPC\">GRPC Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/WebSocket\">Web Socket Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/Modbus\">Modbus TCP Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/OPCUA\">OPC UA Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/COAP\">COAP Endpoint</a></button></p>\r\n          <br>\r\n          <br>\r\n          <p style=\"color:white;\"><u>Official SDK Package</u></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Robomatics IoT SDK</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Third Party API</a></button></p>\r\n          <br>\r\n          <br>\r\n          <p style=\"color:white;\"><u>Developer Support</u></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/Documentation\">Documentation</a></button></p>\r\n            <!-- Sidebar content -->\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"navbar\">\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 5 ERP'\">Level 5 ERP</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 4 WMS'\">Level 4 WMS</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 4 MES'\">Level 4 MES</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 3 SCADA/ HMI'\">Level 3 SCADA/ HMI</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 2 PLC'\">Level 2 PLC</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 1 Sensor and Actuator'\">Level 1 Sensor and Actuator</a>\r\n    \r\n          <div class=\"logout\">\r\n            <a href=\"#\" @click=\"logout\">Logout</a>\r\n          </div>\r\n    \r\n          </div>\r\n    \r\n    \r\n    \r\n        <div class=\"main\" style=\"margin-top:50px; color:white;\">\r\n          <h2>MQTT Protocol</h2>\r\n          <br>\r\n          <br>\r\n          <img src=\"Mosquitto.png\" style=\"width:250px;\">\r\n          <div style=\"text-align:left;\">\r\n                <p>Endpoint : </p>\r\n                <p>Port Number :</p>\r\n          </div>\r\n          <!-- -->\r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n          <div>\r\n\r\n      </div>\r\n    \r\n    \r\n    \r\n      <div>\r\n      <div v-for=\"item in jsonData\" :key=\"item.id\">\r\n        <div @click=\"toggleDropdown('both', item.id)\" class=\"row\" style=\"border: 2px solid black; margin-top:20px; margin-bottom:20px;\">\r\n          {{ item.name }}\r\n        </div>\r\n        \r\n        <div v-if=\"item.showAnalogAndDigital\" class=\"dropdown\">\r\n                    <!---->\r\n\r\n\r\n                    <div @click=\"toggleDropdown('digital', item.id)\" class=\"row\">\r\n                        Digital\r\n\r\n                    </div>\r\n                        <div v-if=\"item.showDigitalDropdown\" class=\"dropdown\">\r\n\r\n\r\n                        <div @click=\"toggleDropdown('bitaddress', item.id)\">Digital: {{ item.digital }}</div>\r\n\r\n                        \r\n                        <div v-if=\"item.showBitAddress\" class=\"dropdown\">\r\n                            This is bit Address\r\n                        </div>\r\n\r\n                        <!---->\r\n                        <div v-if=\"item.showAnalogDropdown\" class=\"dropdown\">\r\n                            Analog: {{ item.analog }}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <!---->\r\n\r\n                    <div @click=\"toggleDropdown('analog', item.id)\" class=\"row\">\r\n                        Analog\r\n                    </div>\r\n\r\n                    <div v-if=\"item.showAnalogDropdown\" class=\"dropdown\">\r\n                    Analog: {{ item.analog }}\r\n                    </div>\r\n     \r\n        </div>\r\n  \r\n \r\n\r\n      </div>\r\n    </div>\r\n    \r\n    \r\n    \r\n \r\n    \r\n    \r\n\r\n    \r\n          \r\n      \r\n        </div>\r\n      </div>\r\n    \r\n    \r\n    \r\n    </template>\r\n \r\n <script>\r\n export default {\r\n   data() {\r\n     return {\r\n       bitAddress: [\r\n           {bitAddress: 100.00},\r\n           {bitAddress: 100.00},\r\n       ],\r\n       jsonData: [\r\n         { id: 1, name: 'PLC 1', analog: 'Analog 1', digital: 'Digital 1', showAnalogDropdown: false, showDigitalDropdown: false, showAnalogAndDigital: false, showBitAddress: false },\r\n         { id: 2, name: 'PLC 2', analog: 'Analog 2', digital: 'Digital 2', showAnalogDropdown: false, showDigitalDropdown: false, showAnalogAndDigital: false, showBitAddress: false },\r\n         // Add more items as needed\r\n       ],\r\n     };\r\n   },\r\n   methods: {\r\n     toggleDropdown(type, id) {\r\n       const index = this.jsonData.findIndex(item => item.id === id);\r\n       if (index !== -1) {\r\n         if (type === 'both') {\r\n           this.jsonData[index].showAnalogAndDigital = !this.jsonData[index].showAnalogAndDigital;\r\n           this.jsonData[index].showAnalogDropdown = false;\r\n           this.jsonData[index].showDigitalDropdown = false;\r\n         } else if (type === 'analog') {\r\n           this.jsonData[index].showAnalogDropdown = !this.jsonData[index].showAnalogDropdown;\r\n           this.jsonData[index].showDigitalDropdown = false;\r\n         } else if (type === 'digital') {\r\n           this.jsonData[index].showDigitalDropdown = !this.jsonData[index].showDigitalDropdown;\r\n           this.jsonData[index].showAnalogDropdown = false;\r\n         } else if (type === 'bitaddress') {\r\n           this.jsonData[index].showBitAddress = !this.jsonData[index].showBitAddress;\r\n         }\r\n       }\r\n     },\r\n   },\r\n };\r\n </script>\r\n    \r\n    <style>\r\n      .modal {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 9999; /* Set the z-index to place the modal on top */\r\n      }\r\n    \r\n      .modal-content {\r\n        background-color: #fde2e8; /* Set the background color to white-pink */\r\n        border: 2px solid #ff1493; /* Add a 2px border with pink color */\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        color:black;\r\n      }\r\n    \r\n    \r\n      .modal-content button {\r\n        /* Add styles for the \"Close\" button */\r\n        border: 1px solid #000; /* Black border */\r\n        padding: 8px 12px; /* Adjust padding as needed */\r\n        background-color: #fff; /* White background */\r\n        color: #000; /* Black text color */\r\n        cursor: pointer;\r\n        border-radius: 5px;\r\n      }\r\n    \r\n      .modal-content button:hover {\r\n        background-color: #000; /* Change background color on hover */\r\n        color: #fff; /* Change text color on hover */\r\n      }\r\n    \r\n    /* Styling for the black alert button */\r\n    .dark-cancel-button {\r\n      padding: 10px 20px;\r\n      background-color: black; /* Change the background color to black */\r\n      color: white;\r\n      border: 2px solid darkgray; /* Change the border color to a darker shade of gray */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .dark-cancel-button:hover {\r\n      background-color: darkgray; /* Change the hover background color to a darker shade of gray */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .dark-cancel-button:active {\r\n      background-color: dimgray; /* Use a darker shade of gray on click */\r\n    }\r\n    \r\n    \r\n    \r\n    /* Styling for the purple alert button */\r\n    .purple-save-button {\r\n      padding: 10px 20px;\r\n      background-color: purple; /* Change the background color to purple */\r\n      color: white;\r\n      border: 2px solid darkpurple; /* Change the border color to a darker shade of purple */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .purple-save-button:hover {\r\n      background-color: darkpurple; /* Change the hover background color to a darker shade of purple */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .purple-save-button:active {\r\n      background-color: #800080; /* Use a darker shade of purple on click (here using hex code) */\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    /* Styling for the grass green alert button */\r\n    .grass-green-add-button {\r\n      padding: 10px 20px;\r\n      background-color: #3CB371; /* Use your preferred grass green color code */\r\n      color: white;\r\n      border: 2px solid #2E8B57; /* Use a slightly darker shade of grass green for the border */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .grass-green-add-button:hover {\r\n      background-color: #2E8B57; /* Use a slightly darker shade of grass green on hover */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .grass-green-add-button:active {\r\n      background-color: #228B22; /* Use a darker shade of grass green on click */\r\n    }\r\n    \r\n    \r\n    /* Styling for the ocean blue alert button */\r\n    .ocean-blue-edit-button {\r\n      padding: 10px 20px;\r\n      background-color: #007BAC; /* Use your preferred ocean blue color code */\r\n      color: white;\r\n      border: 2px solid #005A80; /* Use a slightly darker shade of ocean blue for the border */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .ocean-blue-edit-button:hover {\r\n      background-color: #005A80; /* Use a slightly darker shade of ocean blue on hover */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .ocean-blue-edit-button:active {\r\n      background-color: #00416A; /* Use a darker shade of ocean blue on click */\r\n    }\r\n    \r\n    /* Styling for the red alert button */\r\n    .red-alert-button {\r\n      padding: 10px 20px;\r\n      background-color: red;\r\n      color: white;\r\n      border: 2px solid darkred;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .red-alert-button:hover {\r\n      background-color: darkred;\r\n    }\r\n    \r\n    /* On click effect */\r\n    .red-alert-button:active {\r\n      background-color: crimson;\r\n    }\r\n    \r\n    \r\n    \r\n    .sidebar {\r\n      width: 200px;\r\n      position: fixed; /* Position the sidebar as fixed */\r\n      top: 0;\r\n      bottom: 0; /* Extend the sidebar to the bottom */\r\n      left: 0;\r\n      overflow-y: auto; /* Enable vertical scrolling if content overflows */\r\n      background-color: #111;\r\n      padding-top: 20px;\r\n      padding-bottom: 20px; /* Add padding at the bottom of the sidebar */\r\n      color: white; /* Set text color */\r\n      \r\n    }\r\n    \r\n    .sidebar-content {\r\n      /* Adjust padding as needed */\r\n      padding: 20px;\r\n    }\r\n    \r\n    .sidebar a {\r\n      display: block;\r\n      color: white;\r\n      padding: 16px;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .sidebar a:hover {\r\n      background-color: #ddd;\r\n      color: black;\r\n    }\r\n    \r\n    /* Main content styles */\r\n    .main {\r\n      margin-left: 200px; /* Same as the width of the sidebar */\r\n      padding: 20px;\r\n    }\r\n    \r\n    table {\r\n      border-collapse: collapse;\r\n      width: 100%;\r\n    }\r\n    \r\n    th, td {\r\n      border: 1px solid black;\r\n      padding: 8px;\r\n      text-align: left;\r\n    }\r\n    \r\n    \r\n    /* Navbar styles */\r\n    .navbar {\r\n      background-color: #333;\r\n      overflow: hidden;\r\n      width: 100%;\r\n      position: fixed; /* Position the navbar as fixed */\r\n      top: 0; /* Place the navbar at the top */\r\n      left: 200px; /* Align with the sidebar */\r\n      z-index: 2; /* Add z-index to position the navbar above the main content */\r\n    }\r\n    \r\n    .navbar a {\r\n      float: left;\r\n      display: block;\r\n      color: white;\r\n      text-align: center;\r\n      padding: 14px 16px;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .navbar a:hover {\r\n      background-color: #ddd;\r\n      color: black;\r\n    }\r\n    \r\n    /* Right-aligned logout button */\r\n    .logout {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    \r\n    .logout a {\r\n      color: white;\r\n      padding: 14px 16px;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .logout a:hover {\r\n      background-color: #ddd;\r\n      color: black;\r\n    }\r\n    \r\n    \r\n    \r\n    /* Style for the dropdown buttons */\r\n    .dropdown-button {\r\n      margin-top: 10px; /* Add margin to the top */\r\n      margin-bottom: 10px; /* Add margin to the bottom */\r\n      padding: 5px 10px; /* Adjust padding as needed */\r\n      color: black; /* Black text color */\r\n      cursor: pointer;\r\n      border-radius: 5px;\r\n      text-align: center; /* Center-align the button content */\r\n    \r\n    }\r\n    \r\n    .dropdown-option {\r\n      display: block;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border: none;\r\n      text-align: left;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    </style>"],"mappings":"AA+IC,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,CACR;QAACA,UAAU,EAAE;MAAM,CAAC,EACpB;QAACA,UAAU,EAAE;MAAM,CAAC,CACvB;MACDC,QAAQ,EAAE,CACR;QAAEC,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,MAAM,EAAE,UAAU;QAAEC,OAAO,EAAE,WAAW;QAAEC,kBAAkB,EAAE,KAAK;QAAEC,mBAAmB,EAAE,KAAK;QAAEC,oBAAoB,EAAE,KAAK;QAAEC,cAAc,EAAE;MAAM,CAAC,EAC7K;QAAEP,EAAE,EAAE,CAAC;QAAEC,IAAI,EAAE,OAAO;QAAEC,MAAM,EAAE,UAAU;QAAEC,OAAO,EAAE,WAAW;QAAEC,kBAAkB,EAAE,KAAK;QAAEC,mBAAmB,EAAE,KAAK;QAAEC,oBAAoB,EAAE,KAAK;QAAEC,cAAc,EAAE;MAAM;MAC5K;MAAA;IAEJ,CAAC;EACH,CAAC;;EACDC,OAAO,EAAE;IACPC,cAAcA,CAACC,IAAI,EAAEV,EAAE,EAAE;MACvB,MAAMW,KAAI,GAAI,IAAI,CAACZ,QAAQ,CAACa,SAAS,CAACC,IAAG,IAAKA,IAAI,CAACb,EAAC,KAAMA,EAAE,CAAC;MAC7D,IAAIW,KAAI,KAAM,CAAC,CAAC,EAAE;QAChB,IAAID,IAAG,KAAM,MAAM,EAAE;UACnB,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC,CAACL,oBAAmB,GAAI,CAAC,IAAI,CAACP,QAAQ,CAACY,KAAK,CAAC,CAACL,oBAAoB;UACtF,IAAI,CAACP,QAAQ,CAACY,KAAK,CAAC,CAACP,kBAAiB,GAAI,KAAK;UAC/C,IAAI,CAACL,QAAQ,CAACY,KAAK,CAAC,CAACN,mBAAkB,GAAI,KAAK;QAClD,OAAO,IAAIK,IAAG,KAAM,QAAQ,EAAE;UAC5B,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC,CAACP,kBAAiB,GAAI,CAAC,IAAI,CAACL,QAAQ,CAACY,KAAK,CAAC,CAACP,kBAAkB;UAClF,IAAI,CAACL,QAAQ,CAACY,KAAK,CAAC,CAACN,mBAAkB,GAAI,KAAK;QAClD,OAAO,IAAIK,IAAG,KAAM,SAAS,EAAE;UAC7B,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC,CAACN,mBAAkB,GAAI,CAAC,IAAI,CAACN,QAAQ,CAACY,KAAK,CAAC,CAACN,mBAAmB;UACpF,IAAI,CAACN,QAAQ,CAACY,KAAK,CAAC,CAACP,kBAAiB,GAAI,KAAK;QACjD,OAAO,IAAIM,IAAG,KAAM,YAAY,EAAE;UAChC,IAAI,CAACX,QAAQ,CAACY,KAAK,CAAC,CAACJ,cAAa,GAAI,CAAC,IAAI,CAACR,QAAQ,CAACY,KAAK,CAAC,CAACJ,cAAc;QAC5E;MACF;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}