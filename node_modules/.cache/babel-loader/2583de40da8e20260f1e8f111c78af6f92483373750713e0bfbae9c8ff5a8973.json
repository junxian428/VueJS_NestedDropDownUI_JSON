{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"PLC\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Address\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Bit Address\")])], -1 /* HOISTED */);\nconst _hoisted_2 = [\"onUpdate:modelValue\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Select PLC\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = [\"onUpdate:modelValue\"];\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Select Address\", -1 /* HOISTED */);\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = [\"onUpdate:modelValue\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Select Bit Address\", -1 /* HOISTED */);\nconst _hoisted_10 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs, (plc, plcIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: plcIndex\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => $data.selectedPlcs[plcIndex] = $event\n    }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs, p => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        value: plc\n      }, _toDisplayString(p.name), 9 /* TEXT, PROPS */, _hoisted_4);\n    }), 256 /* UNKEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_2), [[_vModelSelect, $data.selectedPlcs[plcIndex]]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => $data.selectedAddresses[plcIndex] = $event\n    }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(plc.addresses, address => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        value: address\n      }, _toDisplayString(address.name), 9 /* TEXT, PROPS */, _hoisted_7);\n    }), 256 /* UNKEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_5), [[_vModelSelect, $data.selectedAddresses[plcIndex]]])]), _createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": $event => $data.selectedBitAddresses[plcIndex] = $event\n    }, [_hoisted_9, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.selectedAddressBitAddresses(plcIndex), bitAddress => {\n      return _openBlock(), _createElementBlock(\"option\", {\n        value: bitAddress\n      }, _toDisplayString(bitAddress), 9 /* TEXT, PROPS */, _hoisted_10);\n    }), 256 /* UNKEYED_FRAGMENT */))], 8 /* PROPS */, _hoisted_8), [[_vModelSelect, $data.selectedBitAddresses[plcIndex]]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","value","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","plcs","plc","plcIndex","key","selectedPlcs","$event","_hoisted_3","p","_toDisplayString","name","_hoisted_4","selectedAddresses","_hoisted_6","addresses","address","_hoisted_7","selectedBitAddresses","_hoisted_9","$options","selectedAddressBitAddresses","bitAddress","_hoisted_10"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>PLC</th>\r\n            <th>Address</th>\r\n            <th>Bit Address</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(plc, plcIndex) in plcs\" :key=\"plcIndex\">\r\n            <td>\r\n              <select v-model=\"selectedPlcs[plcIndex]\">\r\n                <option value=\"\">Select PLC</option>\r\n                <option :value=\"plc\" v-for=\"p in plcs\">{{ p.name }}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select v-model=\"selectedAddresses[plcIndex]\">\r\n                <option value=\"\">Select Address</option>\r\n                <option :value=\"address\" v-for=\"address in plc.addresses\">{{ address.name }}</option>\r\n              </select>\r\n            </td>\r\n            <td>\r\n              <select v-model=\"selectedBitAddresses[plcIndex]\">\r\n                <option value=\"\">Select Bit Address</option>\r\n                <option :value=\"bitAddress\" v-for=\"bitAddress in selectedAddressBitAddresses(plcIndex)\">\r\n                  {{ bitAddress }}\r\n                </option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        selectedPlcs: [],\r\n        selectedAddresses: [],\r\n        selectedBitAddresses: []\r\n      };\r\n    },\r\n    methods: {\r\n      selectedAddressBitAddresses(plcIndex) {\r\n        const selectedAddress = this.selectedAddresses[plcIndex];\r\n        if (selectedAddress) {\r\n          return selectedAddress.bitAddresses;\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAGQA,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAY,YAAR,KAAG,G,aACPA,mBAAA,CAAgB,YAAZ,SAAO,G,aACXA,mBAAA,CAAoB,YAAhB,aAAW,E;;gCAOXA,mBAAA,CAAoC;EAA5BC,KAAK,EAAC;AAAE,GAAC,YAAU;;;gCAM3BD,mBAAA,CAAwC;EAAhCC,KAAK,EAAC;AAAE,GAAC,gBAAc;;;gCAM/BD,mBAAA,CAA4C;EAApCC,KAAK,EAAC;AAAE,GAAC,oBAAkB;;;uBAzB/CC,mBAAA,CAkCM,cAjCJF,mBAAA,CAgCQ,gBA/BNG,UAMQ,EACRH,mBAAA,CAuBQ,iB,kBAtBNE,mBAAA,CAqBKE,SAAA,QAAAC,WAAA,CArByBC,KAAA,CAAAC,IAAI,GAAtBC,GAAG,EAAEC,QAAQ;yBAAzBP,mBAAA,CAqBK;MArBgCQ,GAAG,EAAED;IAAQ,IAChDT,mBAAA,CAKK,a,gBAJHA,mBAAA,CAGS;uCAHQM,KAAA,CAAAK,YAAY,CAACF,QAAQ,IAAAG;QACpCC,UAAoC,G,kBACpCX,mBAAA,CAA4DE,SAAA,QAAAC,WAAA,CAA3BC,KAAA,CAAAC,IAAI,EAATO,CAAC;2BAA7BZ,mBAAA,CAA4D;QAAnDD,KAAK,EAAEO;MAAG,GAAAO,gBAAA,CAAuBD,CAAC,CAACE,IAAI,wBAAAC,UAAA;oFAFjCX,KAAA,CAAAK,YAAY,CAACF,QAAQ,G,KAKxCT,mBAAA,CAKK,a,gBAJHA,mBAAA,CAGS;uCAHQM,KAAA,CAAAY,iBAAiB,CAACT,QAAQ,IAAAG;QACzCO,UAAwC,G,kBACxCjB,mBAAA,CAAqFE,SAAA,QAAAC,WAAA,CAA1CG,GAAG,CAACY,SAAS,EAAxBC,OAAO;2BAAvCnB,mBAAA,CAAqF;QAA5ED,KAAK,EAAEoB;MAAO,GAAAN,gBAAA,CAAsCM,OAAO,CAACL,IAAI,wBAAAM,UAAA;oFAF1DhB,KAAA,CAAAY,iBAAiB,CAACT,QAAQ,G,KAK7CT,mBAAA,CAOK,a,gBANHA,mBAAA,CAKS;uCALQM,KAAA,CAAAiB,oBAAoB,CAACd,QAAQ,IAAAG;QAC5CY,UAA4C,G,kBAC5CtB,mBAAA,CAESE,SAAA,QAAAC,WAAA,CAFwCoB,QAAA,CAAAC,2BAA2B,CAACjB,QAAQ,GAAlDkB,UAAU;2BAA7CzB,mBAAA,CAES;QAFAD,KAAK,EAAE0B;MAAU,GAAAZ,gBAAA,CACrBY,UAAU,wBAAAC,WAAA;oFAHAtB,KAAA,CAAAiB,oBAAoB,CAACd,QAAQ,G"},"metadata":{},"sourceType":"module","externalDependencies":[]}