{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"dropdown\"\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0,\n  class: \"dropdown\"\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 0,\n  class: \"dropdown\"\n};\nconst _hoisted_7 = [\"onClick\"];\nconst _hoisted_8 = {\n  key: 1,\n  class: \"dropdown\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.jsonData, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createElementVNode(\"div\", {\n      onClick: $event => $options.toggleDropdown('both', item.id),\n      class: \"row\"\n    }, _toDisplayString(item.name), 9 /* TEXT, PROPS */, _hoisted_1), item.showAnalogAndDigital ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_createCommentVNode(\"\"), _createElementVNode(\"div\", {\n      onClick: $event => $options.toggleDropdown('digital', item.id),\n      class: \"row\"\n    }, \" Digital \", 8 /* PROPS */, _hoisted_3), item.showDigitalDropdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", {\n      onClick: $event => $options.toggleDropdown('bitaddress', item.id)\n    }, \"Digital: \" + _toDisplayString(item.digital), 9 /* TEXT, PROPS */, _hoisted_5), _createCommentVNode(\"\"), item.showAnalogDropdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_6, \" Analog: \" + _toDisplayString(item.analog), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\"\"), _createElementVNode(\"div\", {\n      onClick: $event => $options.toggleDropdown('analog', item.id),\n      class: \"row\"\n    }, \" Analog \", 8 /* PROPS */, _hoisted_7), item.showAnalogDropdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, \" Analog: \" + _toDisplayString(item.analog), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$data","jsonData","item","key","id","_createElementVNode","onClick","$event","$options","toggleDropdown","name","_hoisted_1","showAnalogAndDigital","_hoisted_2","_createCommentVNode","_hoisted_3","showDigitalDropdown","_hoisted_4","_toDisplayString","digital","_hoisted_5","showAnalogDropdown","_hoisted_6","analog","_hoisted_7","_hoisted_8"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div v-for=\"item in jsonData\" :key=\"item.id\">\r\n        <div @click=\"toggleDropdown('both', item.id)\" class=\"row\">\r\n          {{ item.name }}\r\n        </div>\r\n        \r\n        <div v-if=\"item.showAnalogAndDigital\" class=\"dropdown\">\r\n                    <!---->\r\n\r\n\r\n                    <div @click=\"toggleDropdown('digital', item.id)\" class=\"row\">\r\n                        Digital\r\n                    </div>\r\n                    <div v-if=\"item.showDigitalDropdown\" class=\"dropdown\">\r\n\r\n\r\n                        <div @click=\"toggleDropdown('bitaddress', item.id)\">Digital: {{ item.digital }}</div>\r\n\r\n\r\n\r\n                        <!---->\r\n                        <div v-if=\"item.showAnalogDropdown\" class=\"dropdown\">\r\n                            Analog: {{ item.analog }}\r\n                        </div>\r\n\r\n\r\n                    </div>\r\n                    <!---->\r\n\r\n                    <div @click=\"toggleDropdown('analog', item.id)\" class=\"row\">\r\n                        Analog\r\n                    </div>\r\n\r\n                    <div v-if=\"item.showAnalogDropdown\" class=\"dropdown\">\r\n                    Analog: {{ item.analog }}\r\n                    </div>\r\n     \r\n        </div>\r\n  \r\n \r\n\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        bitAddress: [\r\n            {bitAddress: 100.00 },\r\n            [],\r\n        ],\r\n        jsonData: [\r\n          { id: 1, name: 'Item 1', analog: 'Analog 1', digital: 'Digital 1', showAnalogDropdown: false, showDigitalDropdown: false, showAnalogAndDigital: false, showBitAddress: false },\r\n          { id: 2, name: 'Item 2', analog: 'Analog 2', digital: 'Digital 2', showAnalogDropdown: false, showDigitalDropdown: false, showAnalogAndDigital: false, showBitAddress: false },\r\n          // Add more items as needed\r\n        ],\r\n      };\r\n    },\r\n    methods: {\r\n      toggleDropdown(type, id) {\r\n        const index = this.jsonData.findIndex(item => item.id === id);\r\n        if (index !== -1) {\r\n          if (type === 'both') {\r\n            this.jsonData[index].showAnalogAndDigital = !this.jsonData[index].showAnalogAndDigital;\r\n            this.jsonData[index].showAnalogDropdown = false;\r\n            this.jsonData[index].showDigitalDropdown = false;\r\n          } else if (type === 'analog') {\r\n            this.jsonData[index].showAnalogDropdown = !this.jsonData[index].showAnalogDropdown;\r\n            this.jsonData[index].showDigitalDropdown = false;\r\n          } else if (type === 'digital') {\r\n            this.jsonData[index].showDigitalDropdown = !this.jsonData[index].showDigitalDropdown;\r\n            this.jsonData[index].showAnalogDropdown = false;\r\n          } else if (type === 'bitaddress') {\r\n            \r\n          }\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Add your CSS styling here */\r\n  </style>\r\n  "],"mappings":";;;;EAO8CA,KAAK,EAAC;;;;;EAOKA,KAAK,EAAC;;;;;EAQHA,KAAK,EAAC;;;;;EAYVA,KAAK,EAAC;;;uBAjC1DC,mBAAA,CA0CM,e,kBAzCJA,mBAAA,CAwCMC,SAAA,QAAAC,WAAA,CAxCcC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAhBL,mBAAA,CAwCM;MAxCyBM,GAAG,EAAED,IAAI,CAACE;QACvCC,mBAAA,CAEM;MAFAC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,SAASP,IAAI,CAACE,EAAE;MAAGR,KAAK,EAAC;wBAC/CM,IAAI,CAACQ,IAAI,wBAAAC,UAAA,GAGHT,IAAI,CAACU,oBAAoB,I,cAApCf,mBAAA,CA+BM,OA/BNgB,UA+BM,GA9BMC,mBAAA,IAAO,EAGPT,mBAAA,CAEM;MAFAC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,YAAYP,IAAI,CAACE,EAAE;MAAGR,KAAK,EAAC;OAAM,WAE7D,iBAAAmB,UAAA,GACWb,IAAI,CAACc,mBAAmB,I,cAAnCnB,mBAAA,CAaM,OAbNoB,UAaM,GAVFZ,mBAAA,CAAqF;MAA/EC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,eAAeP,IAAI,CAACE,EAAE;OAAG,WAAS,GAAAc,gBAAA,CAAGhB,IAAI,CAACiB,OAAO,wBAAAC,UAAA,GAI5EN,mBAAA,IAAO,EACIZ,IAAI,CAACmB,kBAAkB,I,cAAlCxB,mBAAA,CAEM,OAFNyB,UAEM,EAF+C,WACzC,GAAAJ,gBAAA,CAAGhB,IAAI,CAACqB,MAAM,oB,0EAK9BT,mBAAA,IAAO,EAEPT,mBAAA,CAEM;MAFAC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,WAAWP,IAAI,CAACE,EAAE;MAAGR,KAAK,EAAC;OAAM,UAE5D,iBAAA4B,UAAA,GAEWtB,IAAI,CAACmB,kBAAkB,I,cAAlCxB,mBAAA,CAEM,OAFN4B,UAEM,EAF+C,WAC7C,GAAAP,gBAAA,CAAGhB,IAAI,CAACqB,MAAM,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}