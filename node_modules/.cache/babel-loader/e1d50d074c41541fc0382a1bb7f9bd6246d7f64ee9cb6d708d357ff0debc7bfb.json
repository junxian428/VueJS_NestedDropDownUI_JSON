{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_dropdown = _resolveComponent(\"dropdown\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_dropdown, {\n    options: $data.options.PLC,\n    onOptionSelected: $options.selectPLC\n  }, null, 8 /* PROPS */, [\"options\", \"onOptionSelected\"]), $data.selectedOptions.level1 === 'Digital' ? (_openBlock(), _createBlock(_component_dropdown, {\n    key: 0,\n    options: $data.options.PLC.Digital,\n    onOptionSelected: $options.selectDigital\n  }, null, 8 /* PROPS */, [\"options\", \"onOptionSelected\"])) : _createCommentVNode(\"v-if\", true), $data.selectedOptions.level2 === 'Address' ? (_openBlock(), _createBlock(_component_dropdown, {\n    key: 1,\n    options: $data.options.PLC.Digital.Address,\n    onOptionSelected: $options.selectAddress\n  }, null, 8 /* PROPS */, [\"options\", \"onOptionSelected\"])) : _createCommentVNode(\"v-if\", true), $data.selectedOptions.level3 === 'BitAddress' ? (_openBlock(), _createBlock(_component_dropdown, {\n    key: 2,\n    options: $data.options.PLC.Digital.Address.BitAddress\n  }, null, 8 /* PROPS */, [\"options\"])) : _createCommentVNode(\"v-if\", true), _createCommentVNode(\" Analog Dropdowns \")]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_dropdown","options","$data","PLC","onOptionSelected","$options","selectPLC","selectedOptions","level1","_createBlock","Digital","selectDigital","level2","Address","selectAddress","level3","BitAddress","_createCommentVNode"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <dropdown :options=\"options.PLC\" @option-selected=\"selectPLC\"></dropdown>\r\n      <dropdown v-if=\"selectedOptions.level1 === 'Digital'\" :options=\"options.PLC.Digital\" @option-selected=\"selectDigital\"></dropdown>\r\n      <dropdown v-if=\"selectedOptions.level2 === 'Address'\" :options=\"options.PLC.Digital.Address\" @option-selected=\"selectAddress\"></dropdown>\r\n      <dropdown v-if=\"selectedOptions.level3 === 'BitAddress'\" :options=\"options.PLC.Digital.Address.BitAddress\"></dropdown>\r\n      <!-- Analog Dropdowns -->\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        options: {\r\n          PLC: {\r\n            Digital: {\r\n              Address: {\r\n                BitAddress: []\r\n              }\r\n            },\r\n            Analog: {\r\n              Address: []\r\n            }\r\n          }\r\n        },\r\n        selectedOptions: {\r\n          level1: null,\r\n          level2: null,\r\n          level3: null,\r\n          level4: null\r\n        }\r\n      };\r\n    },\r\n    methods: {\r\n      selectPLC(option) {\r\n        this.selectedOptions.level1 = option;\r\n        // Reset other levels if needed\r\n      },\r\n      selectDigital(option) {\r\n        this.selectedOptions.level2 = option;\r\n        // Reset other levels if needed\r\n      },\r\n      selectAddress(option) {\r\n        this.selectedOptions.level3 = option;\r\n        // Reset other levels if needed\r\n      }\r\n      // ...\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;;uBACIA,mBAAA,CAMM,cALJC,YAAA,CAAyEC,mBAAA;IAA9DC,OAAO,EAAEC,KAAA,CAAAD,OAAO,CAACE,GAAG;IAAGC,gBAAe,EAAEC,QAAA,CAAAC;4DACnCJ,KAAA,CAAAK,eAAe,CAACC,MAAM,kB,cAAtCC,YAAA,CAAiIT,mBAAA;;IAA1EC,OAAO,EAAEC,KAAA,CAAAD,OAAO,CAACE,GAAG,CAACO,OAAO;IAAGN,gBAAe,EAAEC,QAAA,CAAAM;iGACvFT,KAAA,CAAAK,eAAe,CAACK,MAAM,kB,cAAtCH,YAAA,CAAyIT,mBAAA;;IAAlFC,OAAO,EAAEC,KAAA,CAAAD,OAAO,CAACE,GAAG,CAACO,OAAO,CAACG,OAAO;IAAGT,gBAAe,EAAEC,QAAA,CAAAS;iGAC/FZ,KAAA,CAAAK,eAAe,CAACQ,MAAM,qB,cAAtCN,YAAA,CAAsHT,mBAAA;;IAA5DC,OAAO,EAAEC,KAAA,CAAAD,OAAO,CAACE,GAAG,CAACO,OAAO,CAACG,OAAO,CAACG;6EAC/FC,mBAAA,sBAAyB,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}