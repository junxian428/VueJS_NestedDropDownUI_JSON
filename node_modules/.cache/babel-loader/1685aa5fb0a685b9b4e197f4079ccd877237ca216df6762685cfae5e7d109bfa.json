{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  colspan: \"2\"\n};\nconst _hoisted_4 = [\"onClick\"];\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  colspan: \"2\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs, (plc, plcIndex) => {\n    return _openBlock(), _createElementBlock(_Fragment, {\n      key: 'plc-' + plcIndex\n    }, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleExpansion('address', plcIndex)\n    }, _toDisplayString(plc.name), 9 /* TEXT, PROPS */, _hoisted_1)])]), $data.expandedAddresses[plcIndex] ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_2, [_createElementVNode(\"td\", _hoisted_3, [_createElementVNode(\"table\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(plc.addresses, (address, addressIndex) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: 'address-' + plcIndex + '-' + addressIndex\n      }, [_createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n        onClick: $event => $options.toggleExpansion('bitAddress', plcIndex, addressIndex)\n      }, _toDisplayString(address.name), 9 /* TEXT, PROPS */, _hoisted_4)])]);\n    }), 128 /* KEYED_FRAGMENT */)), $data.expandedBitAddresses[plcIndex] ? (_openBlock(), _createElementBlock(\"tr\", _hoisted_5, [_createElementVNode(\"td\", _hoisted_6, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.expandedBitAddresses[plcIndex], bitAddress => {\n      return _openBlock(), _createElementBlock(\"li\", {\n        key: bitAddress\n      }, _toDisplayString(bitAddress), 1 /* TEXT */);\n    }), 128 /* KEYED_FRAGMENT */))])])])) : _createCommentVNode(\"v-if\", true)])])])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["colspan","_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","plcs","plc","plcIndex","onClick","$event","$options","toggleExpansion","name","_hoisted_1","expandedAddresses","_hoisted_2","_hoisted_3","addresses","address","addressIndex","key","_hoisted_4","expandedBitAddresses","_hoisted_5","_hoisted_6","bitAddress","_toDisplayString"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          <template v-for=\"(plc, plcIndex) in plcs\" :key=\"'plc-' + plcIndex\">\r\n            <tr>\r\n              <td>\r\n                <button @click=\"toggleExpansion('address', plcIndex)\">\r\n                  {{ plc.name }}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr v-if=\"expandedAddresses[plcIndex]\">\r\n              <td colspan=\"2\">\r\n                <table>\r\n                  <tr v-for=\"(address, addressIndex) in plc.addresses\" :key=\"'address-' + plcIndex + '-' + addressIndex\">\r\n                    <td>\r\n                      <button @click=\"toggleExpansion('bitAddress', plcIndex, addressIndex)\">\r\n                        {{ address.name }}\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                  <tr v-if=\"expandedBitAddresses[plcIndex]\">\r\n                    <td colspan=\"2\">\r\n                      <ul>\r\n                        <li v-for=\"bitAddress in expandedBitAddresses[plcIndex]\" :key=\"bitAddress\">\r\n                          {{ bitAddress }}\r\n                        </li>\r\n                      </ul>\r\n                    </td>\r\n                  </tr>\r\n                </table>\r\n              </td>\r\n            </tr>\r\n          </template>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        expandedAddresses: new Array(this.plcs.length).fill(false),\r\n        expandedBitAddresses: new Array(this.plcs.length).fill([]),\r\n      };\r\n    },\r\n    methods: {\r\n      toggleExpansion(level, plcIndex, addressIndex = null) {\r\n        if (level === 'address') {\r\n          this.expandedAddresses[plcIndex] = !this.expandedAddresses[plcIndex];\r\n          this.expandedBitAddresses[plcIndex] = [];\r\n        } else if (level === 'bitAddress') {\r\n          this.expandedBitAddresses[plcIndex] = this.plcs[plcIndex].addresses[addressIndex].bitAddresses;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;;;EAakBA,OAAO,EAAC;AAAG;;;;;;EAULA,OAAO,EAAC;AAAG;;uBAtB/BC,mBAAA,CAoCM,cAnCJC,mBAAA,CAkCQ,gBAjCNA,mBAAA,CAgCQ,iB,kBA/BND,mBAAA,CA8BWE,SAAA,QAAAC,WAAA,CA9ByBC,KAAA,CAAAC,IAAI,GAAtBC,GAAG,EAAEC,QAAQ;;oBAA0BA;QACvDN,mBAAA,CAMK,aALHA,mBAAA,CAIK,aAHHA,mBAAA,CAES;MAFAO,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,YAAYJ,QAAQ;wBAC9CD,GAAG,CAACM,IAAI,wBAAAC,UAAA,E,KAIPT,KAAA,CAAAU,iBAAiB,CAACP,QAAQ,K,cAApCP,mBAAA,CAqBK,MAAAe,UAAA,GApBHd,mBAAA,CAmBK,MAnBLe,UAmBK,GAlBHf,mBAAA,CAiBQ,iB,kBAhBND,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANiCG,GAAG,CAACW,SAAS,GAAvCC,OAAO,EAAEC,YAAY;2BAAjCnB,mBAAA,CAMK;QANiDoB,GAAG,eAAeb,QAAQ,SAASY;UACvFlB,mBAAA,CAIK,aAHHA,mBAAA,CAES;QAFAO,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,eAAeJ,QAAQ,EAAEY,YAAY;0BAC/DD,OAAO,CAACN,IAAI,wBAAAS,UAAA,E;oCAIXjB,KAAA,CAAAkB,oBAAoB,CAACf,QAAQ,K,cAAvCP,mBAAA,CAQK,MAAAuB,UAAA,GAPHtB,mBAAA,CAMK,MANLuB,UAMK,GALHvB,mBAAA,CAIK,c,kBAHHD,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAFoBC,KAAA,CAAAkB,oBAAoB,CAACf,QAAQ,GAA3CkB,UAAU;2BAArBzB,mBAAA,CAEK;QAFqDoB,GAAG,EAAEK;MAAU,GAAAC,gBAAA,CACpED,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}