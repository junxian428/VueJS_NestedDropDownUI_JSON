{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createBlock as _createBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_digital_button = _resolveComponent(\"digital-button\");\n  const _component_analog_button = _resolveComponent(\"analog-button\");\n  const _component_digital_info = _resolveComponent(\"digital-info\");\n  const _component_analog_info = _resolveComponent(\"analog-info\");\n  const _component_bit_info = _resolveComponent(\"bit-info\");\n  const _component_plc_component = _resolveComponent(\"plc-component\");\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcList, (plc, index) => {\n    return _openBlock(), _createBlock(_component_plc_component, {\n      key: index,\n      onToggle: $event => $options.togglePLC(index)\n    }, {\n      default: _withCtx(() => [plc.showDigital ? (_openBlock(), _createBlock(_component_digital_button, {\n        key: 0,\n        onClick: $event => $options.showDigitalInfo(index)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Digital\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), plc.showAnalog ? (_openBlock(), _createBlock(_component_analog_button, {\n        key: 1,\n        onClick: $event => $options.showAnalogInfo(index)\n      }, {\n        default: _withCtx(() => [_createTextVNode(\"Analog\")]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onClick\"])) : _createCommentVNode(\"v-if\", true), plc.showDigitalInfo ? (_openBlock(), _createBlock(_component_digital_info, {\n        key: 2\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(plc.digitalAddress), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), plc.showAnalogInfo ? (_openBlock(), _createBlock(_component_analog_info, {\n        key: 3\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(plc.analogAddress), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true), plc.showBitInfo ? (_openBlock(), _createBlock(_component_bit_info, {\n        key: 4\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(plc.bitAddress), 1 /* TEXT */)]),\n\n        _: 2 /* DYNAMIC */\n      }, 1024 /* DYNAMIC_SLOTS */)) : _createCommentVNode(\"v-if\", true)]),\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"onToggle\"]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_renderList","$data","plcList","plc","index","_createBlock","_component_plc_component","key","onToggle","$event","$options","togglePLC","showDigital","_component_digital_button","onClick","showDigitalInfo","showAnalog","_component_analog_button","showAnalogInfo","_component_digital_info","digitalAddress","_component_analog_info","analogAddress","showBitInfo","_component_bit_info","bitAddress"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <plc-component v-for=\"(plc, index) in plcList\" :key=\"index\" @toggle=\"togglePLC(index)\">\r\n        <digital-button v-if=\"plc.showDigital\" @click=\"showDigitalInfo(index)\">Digital</digital-button>\r\n        <analog-button v-if=\"plc.showAnalog\" @click=\"showAnalogInfo(index)\">Analog</analog-button>\r\n  \r\n        <digital-info v-if=\"plc.showDigitalInfo\">{{ plc.digitalAddress }}</digital-info>\r\n        <analog-info v-if=\"plc.showAnalogInfo\">{{ plc.analogAddress }}</analog-info>\r\n        <bit-info v-if=\"plc.showBitInfo\">{{ plc.bitAddress }}</bit-info>\r\n      </plc-component>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import PLCComponent from './PLCComponent.vue';\r\n  import DigitalButton from './DigitalButton.vue';\r\n  import AnalogButton from './AnalogButton.vue';\r\n  import DigitalInfo from './DigitalInfo.vue';\r\n  import AnalogInfo from './AnalogInfo.vue';\r\n  import BitInfo from './BitInfo.vue';\r\n  \r\n  export default {\r\n    components: {\r\n      PLCComponent,\r\n      DigitalButton,\r\n      AnalogButton,\r\n      DigitalInfo,\r\n      AnalogInfo,\r\n      BitInfo,\r\n    },\r\n    data() {\r\n      return {\r\n        plcList: [\r\n          // Initialize your PLC data objects here\r\n          // { showDigital: false, showAnalog: false, ... }\r\n        ],\r\n      };\r\n    },\r\n    methods: {\r\n      togglePLC(index) {\r\n        // Toggle the PLC's visibility properties\r\n        this.plcList[index].showDigital = !this.plcList[index].showDigital;\r\n        this.plcList[index].showAnalog = !this.plcList[index].showAnalog;\r\n      },\r\n      showDigitalInfo(index) {\r\n        // Implement logic to show digital information\r\n        this.plcList[index].showDigitalInfo = true;\r\n        this.plcList[index].showAnalogInfo = false;\r\n        this.plcList[index].showBitInfo = false;\r\n      },\r\n      showAnalogInfo(index) {\r\n        // Implement logic to show analog information\r\n        this.plcList[index].showDigitalInfo = false;\r\n        this.plcList[index].showAnalogInfo = true;\r\n        this.plcList[index].showBitInfo = false;\r\n      },\r\n      // Add similar methods for showing bit info, if needed\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;;;;;uBACIA,mBAAA,CASM,e,kBARJA,mBAAA,CAOgBC,SAAA,QAAAC,WAAA,CAPsBC,KAAA,CAAAC,OAAO,GAAtBC,GAAG,EAAEC,KAAK;yBAAjCC,YAAA,CAOgBC,wBAAA;MAPgCC,GAAG,EAAEH,KAAK;MAAGI,QAAM,EAAAC,MAAA,IAAEC,QAAA,CAAAC,SAAS,CAACP,KAAK;;wBAClF,MAA+F,CAAzED,GAAG,CAACS,WAAW,I,cAArCP,YAAA,CAA+FQ,yBAAA;;QAAvDC,OAAK,EAAAL,MAAA,IAAEC,QAAA,CAAAK,eAAe,CAACX,KAAK;;0BAAG,MAAO,C,iBAAP,SAAO,E;;6FACzDD,GAAG,CAACa,UAAU,I,cAAnCX,YAAA,CAA0FY,wBAAA;;QAApDH,OAAK,EAAAL,MAAA,IAAEC,QAAA,CAAAQ,cAAc,CAACd,KAAK;;0BAAG,MAAM,C,iBAAN,QAAM,E;;6FAEtDD,GAAG,CAACY,eAAe,I,cAAvCV,YAAA,CAAgFc,uBAAA;QAAAZ,GAAA;MAAA;0BAAvC,MAAwB,C,kCAArBJ,GAAG,CAACiB,cAAc,iB;;;yEAC3CjB,GAAG,CAACe,cAAc,I,cAArCb,YAAA,CAA4EgB,sBAAA;QAAAd,GAAA;MAAA;0BAArC,MAAuB,C,kCAApBJ,GAAG,CAACmB,aAAa,iB;;;yEAC3CnB,GAAG,CAACoB,WAAW,I,cAA/BlB,YAAA,CAAgEmB,mBAAA;QAAAjB,GAAA;MAAA;0BAA/B,MAAoB,C,kCAAjBJ,GAAG,CAACsB,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}