{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs, (plc, plcIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: 'plc-' + plcIndex\n    }, [_createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n      onClick: $event => $options.toggleExpansion('address', plcIndex)\n    }, _toDisplayString(plc.name), 9 /* TEXT, PROPS */, _hoisted_1)])]);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.expandedAddresses, (addresses, plcIndex) => {\n    return _openBlock(), _createElementBlock(_Fragment, null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(addresses, (address, addressIndex) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: 'address-' + plcIndex + '-' + addressIndex\n      }, [_createElementVNode(\"td\", null, [_createElementVNode(\"button\", {\n        onClick: $event => $options.toggleExpansion('bitAddress', plcIndex, addressIndex)\n      }, _toDisplayString(address.name), 9 /* TEXT, PROPS */, _hoisted_2)])]);\n    }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.expandedBitAddresses[plcIndex], (bitAddresses, addressIndex) => {\n      return _openBlock(), _createElementBlock(\"tr\", {\n        key: 'bitAddresses-' + plcIndex + '-' + addressIndex\n      }, [bitAddresses && bitAddresses.length > 0 ? (_openBlock(), _createElementBlock(\"td\", _hoisted_3, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bitAddresses, bitAddress => {\n        return _openBlock(), _createElementBlock(\"span\", {\n          key: bitAddress\n        }, _toDisplayString(bitAddress), 1 /* TEXT */);\n      }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))], 64 /* STABLE_FRAGMENT */);\n  }), 256 /* UNKEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","$data","plcs","plc","plcIndex","key","onClick","$event","$options","toggleExpansion","name","_hoisted_1","expandedAddresses","addresses","address","addressIndex","_hoisted_2","expandedBitAddresses","bitAddresses","length","_hoisted_3","bitAddress","_toDisplayString"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          <tr v-for=\"(plc, plcIndex) in plcs\" :key=\"'plc-' + plcIndex\">\r\n            <td>\r\n              <button @click=\"toggleExpansion('address', plcIndex)\">\r\n                {{ plc.name }}\r\n              </button>\r\n            </td>\r\n          </tr>\r\n          <template v-for=\"(addresses, plcIndex) in expandedAddresses\">\r\n            <tr v-for=\"(address, addressIndex) in addresses\" :key=\"'address-' + plcIndex + '-' + addressIndex\">\r\n              <td>\r\n                <button @click=\"toggleExpansion('bitAddress', plcIndex, addressIndex)\">\r\n                  {{ address.name }}\r\n                </button>\r\n              </td>\r\n            </tr>\r\n            <tr v-for=\"(bitAddresses, addressIndex) in expandedBitAddresses[plcIndex]\" :key=\"'bitAddresses-' + plcIndex + '-' + addressIndex\">\r\n              <td v-if=\"bitAddresses && bitAddresses.length > 0\">\r\n                <span v-for=\"bitAddress in bitAddresses\" :key=\"bitAddress\">\r\n                  {{ bitAddress }}\r\n                </span>\r\n              </td>\r\n            </tr>\r\n          </template>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        expandedAddresses: new Array(this.plcs.length).fill([]),\r\n        expandedBitAddresses: new Array(this.plcs.length).fill([]),\r\n      };\r\n    },\r\n    methods: {\r\n      toggleExpansion(level, plcIndex, addressIndex = null) {\r\n        if (level === 'address') {\r\n          this.$set(this.expandedAddresses, plcIndex, this.plcs[plcIndex].addresses);\r\n          this.$set(this.expandedBitAddresses, plcIndex, new Array(this.plcs[plcIndex].addresses.length).fill([]));\r\n        } else if (level === 'bitAddress') {\r\n          this.$set(this.expandedBitAddresses[plcIndex], addressIndex, this.plcs[plcIndex].addresses[addressIndex].bitAddresses);\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;;;;uBACIA,mBAAA,CA4BM,cA3BJC,mBAAA,CA0BQ,gBAzBNA,mBAAA,CAwBQ,iB,kBAvBND,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANyBC,KAAA,CAAAC,IAAI,GAAtBC,GAAG,EAAEC,QAAQ;yBAAzBP,mBAAA,CAMK;MANgCQ,GAAG,WAAWD;QACjDN,mBAAA,CAIK,aAHHA,mBAAA,CAES;MAFAQ,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,YAAYL,QAAQ;wBAC9CD,GAAG,CAACO,IAAI,wBAAAC,UAAA,E;qDAIjBd,mBAAA,CAeWE,SAAA,QAAAC,WAAA,CAf+BC,KAAA,CAAAW,iBAAiB,GAAzCC,SAAS,EAAET,QAAQ;kFACnCP,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANiCa,SAAS,GAAnCC,OAAO,EAAEC,YAAY;2BAAjClB,mBAAA,CAMK;QAN6CQ,GAAG,eAAeD,QAAQ,SAASW;UACnFjB,mBAAA,CAIK,aAHHA,mBAAA,CAES;QAFAQ,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,eAAe,eAAeL,QAAQ,EAAEW,YAAY;0BAC/DD,OAAO,CAACJ,IAAI,wBAAAM,UAAA,E;uDAIrBnB,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANsCC,KAAA,CAAAgB,oBAAoB,CAACb,QAAQ,IAA5Dc,YAAY,EAAEH,YAAY;2BAAtClB,mBAAA,CAMK;QANuEQ,GAAG,oBAAoBD,QAAQ,SAASW;UACxGG,YAAY,IAAIA,YAAY,CAACC,MAAM,Q,cAA7CtB,mBAAA,CAIK,MAAAuB,UAAA,I,kBAHHvB,mBAAA,CAEOE,SAAA,QAAAC,WAAA,CAFoBkB,YAAY,EAA1BG,UAAU;6BAAvBxB,mBAAA,CAEO;UAFmCQ,GAAG,EAAEgB;QAAU,GAAAC,gBAAA,CACpDD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}