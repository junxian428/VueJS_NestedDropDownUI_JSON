{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0,\n  class: \"dropdown\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.jsonData, item => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: item.id\n    }, [_createElementVNode(\"div\", {\n      onClick: $event => $options.toggleDropdown(item.id),\n      class: \"row\"\n    }, _toDisplayString(item.name), 9 /* TEXT, PROPS */, _hoisted_1), item.showDropdown ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, \" Analog Digital \")) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$data","jsonData","item","key","id","_createElementVNode","onClick","$event","$options","toggleDropdown","name","_hoisted_1","showDropdown","_hoisted_2"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div v-for=\"item in jsonData\" :key=\"item.id\">\r\n        <div @click=\"toggleDropdown(item.id)\" class=\"row\">\r\n          {{ item.name }}\r\n        </div>\r\n        <div v-if=\"item.showDropdown\" class=\"dropdown\">\r\n          Analog\r\n          Digital\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        jsonData: [\r\n          { id: 1, name: 'Item 1', showDropdown: false },\r\n          { id: 2, name: 'Item 2', showDropdown: false },\r\n          // Add more items as needed\r\n        ],\r\n      };\r\n    },\r\n    methods: {\r\n      toggleDropdown(id) {\r\n        const index = this.jsonData.findIndex(item => item.id === id);\r\n        if (index !== -1) {\r\n          this.jsonData[index].showDropdown = !this.jsonData[index].showDropdown;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style>\r\n  /* Add your CSS styling here */\r\n  </style>\r\n  "],"mappings":";;;;EAMsCA,KAAK,EAAC;;;uBALxCC,mBAAA,CAUM,e,kBATJA,mBAAA,CAQMC,SAAA,QAAAC,WAAA,CARcC,KAAA,CAAAC,QAAQ,EAAhBC,IAAI;yBAAhBL,mBAAA,CAQM;MARyBM,GAAG,EAAED,IAAI,CAACE;QACvCC,mBAAA,CAEM;MAFAC,OAAK,EAAAC,MAAA,IAAEC,QAAA,CAAAC,cAAc,CAACP,IAAI,CAACE,EAAE;MAAGR,KAAK,EAAC;wBACvCM,IAAI,CAACQ,IAAI,wBAAAC,UAAA,GAEHT,IAAI,CAACU,YAAY,I,cAA5Bf,mBAAA,CAGM,OAHNgB,UAGM,EAHyC,kBAG/C,K"},"metadata":{},"sourceType":"module","externalDependencies":[]}