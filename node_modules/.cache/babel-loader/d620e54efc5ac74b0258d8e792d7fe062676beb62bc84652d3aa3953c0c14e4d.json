{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<br><div class=\\\"sidebar-content\\\"><p style=\\\"color:white;\\\"><button><a href=\\\"#/\\\">IoT Dashboard</a></button></p><br><p style=\\\"color:white;\\\"><u>Supported Protocol</u></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/MQTT\\\">MQTT Mosquitto Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">AWS IoT Core Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">HTTPS API Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Web Socket Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Modbus TCP Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">OPC UA Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">COAP Endpoint</a></button></p><br><br><p style=\\\"color:white;\\\"><u>Official SDK Package</u></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Robomatics IoT SDK</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Third Party API</a></button></p><br><br><p style=\\\"color:white;\\\"><u>Developer Support</u></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/MQTT\\\">Documentation</a></button></p><!-- Sidebar content --></div>\", 2);\nconst _hoisted_5 = {\n  class: \"navbar\"\n};\nconst _hoisted_6 = {\n  class: \"logout\"\n};\nconst _hoisted_7 = {\n  class: \"main\",\n  style: {\n    \"margin-top\": \"50px\",\n    \"color\": \"white\"\n  }\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"IoT Dashboard\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_12 = {\n  class: \"modal-content\"\n};\nconst _hoisted_13 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Success!\", -1 /* HOISTED */);\nconst _hoisted_14 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Your data has been saved successfully.\", -1 /* HOISTED */);\nconst _hoisted_15 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_16 = {\n  class: \"modal-content\"\n};\nconst _hoisted_17 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Confirm Delete?\", -1 /* HOISTED */);\nconst _hoisted_18 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete this data?\", -1 /* HOISTED */);\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"User ID: \" + _toDisplayString($data.userID), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Token: \" + _toDisplayString($data.userToken), 1 /* TEXT */), _hoisted_3]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.selectedLevel = 'Level 5 ERP')\n  }, \"Level 5 ERP\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.selectedLevel = 'Level 4 WMS')\n  }, \"Level 4 WMS\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.selectedLevel = 'Level 4 MES')\n  }, \"Level 4 MES\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.selectedLevel = 'Level 3 SCADA/ HMI')\n  }, \"Level 3 SCADA/ HMI\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.selectedLevel = 'Level 2 PLC')\n  }, \"Level 2 PLC\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.selectedLevel = 'Level 1 Sensor and Actuator')\n  }, \"Level 1 Sensor and Actuator\"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[6] || (_cache[6] = (...args) => _ctx.logout && _ctx.logout(...args))\n  }, \"Logout\")])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _hoisted_9, _hoisted_10, _createCommentVNode(\" \"), _createElementVNode(\"div\", null, [_createCommentVNode(\" Form \"), $data.successModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_createElementVNode(\"div\", _hoisted_12, [_hoisted_13, _hoisted_14, _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closeSuccessModal && $options.closeSuccessModal(...args))\n  }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Confirmation Modal \"), _ctx.confirmationModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [_hoisted_17, _hoisted_18, _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.confirmDelete && _ctx.confirmDelete(...args))\n  }, \"Delete\"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.cancelDelete && _ctx.cancelDelete(...args))\n  }, \"Cancel\")])])) : _createCommentVNode(\"v-if\", true), _hoisted_19])]);\n}","map":{"version":3,"names":["id","class","style","_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","userID","userToken","_hoisted_3","_hoisted_5","href","onClick","_cache","$event","_ctx","selectedLevel","_hoisted_6","args","logout","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_createCommentVNode","successModalVisible","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","$options","closeSuccessModal","confirmationModalVisible","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","confirmDelete","cancelDelete","_hoisted_19"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\HomeView.vue"],"sourcesContent":["<template>\n\n\n\n\n\n<div id=\"app\">\n  \n\n  <div class=\"sidebar\">\n      <p>User ID: {{ userID }}</p>\n      <p>Token: {{ userToken }}</p>\n      <br>\n      <div class=\"sidebar-content\">\n\n        <p style=\"color:white;\"><button><a href=\"#/\">IoT Dashboard</a></button></p>\n        <br>\n\n      <p style=\"color:white;\"><u>Supported Protocol</u></p>\n      <p style=\"color:white;\"><button><a href=\"#/MQTT\">MQTT Mosquitto Endpoint</a></button></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">AWS IoT Core Endpoint</a></button></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">HTTPS API Endpoint</a></button></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Web Socket Endpoint</a></button></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Modbus TCP Endpoint</a></button></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">OPC UA Endpoint</a></button></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">COAP Endpoint</a></button></p>\n      <br>\n      <br>\n      <p style=\"color:white;\"><u>Official SDK Package</u></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Robomatics IoT SDK</a></button></p>\n      <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Third Party API</a></button></p>\n      <br>\n      <br>\n      <p style=\"color:white;\"><u>Developer Support</u></p>\n      <p style=\"color:white;\"><button><a href=\"#/MQTT\">Documentation</a></button></p>\n        <!-- Sidebar content -->\n        </div>\n    </div>\n\n    <div class=\"navbar\">\n        <a href=\"#\" @click=\"selectedLevel = 'Level 5 ERP'\">Level 5 ERP</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 4 WMS'\">Level 4 WMS</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 4 MES'\">Level 4 MES</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 3 SCADA/ HMI'\">Level 3 SCADA/ HMI</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 2 PLC'\">Level 2 PLC</a>\n        <a href=\"#\" @click=\"selectedLevel = 'Level 1 Sensor and Actuator'\">Level 1 Sensor and Actuator</a>\n\n      <div class=\"logout\">\n        <a href=\"#\" @click=\"logout\">Logout</a>\n      </div>\n\n      </div>\n\n\n\n    <div class=\"main\" style=\"margin-top:50px; color:white;\">\n      <h2>IoT Dashboard</h2>\n      <br>\n      <br>\n      <!-- -->\n\n\n\n\n\n\n      <div>\n    <!-- Form -->\n\n        <div v-if=\"successModalVisible\" class=\"modal\">\n          <div class=\"modal-content\">\n            <h2>Success!</h2>\n            <p>Your data has been saved successfully.</p>\n            <button @click=\"closeSuccessModal\">Close</button>\n          </div>\n        </div>\n  </div>\n\n\n\n\n  <!-- Confirmation Modal -->\n  <div v-if=\"confirmationModalVisible\" class=\"modal\">\n      <div class=\"modal-content\">\n        <h2>Confirm Delete?</h2>\n        <p>Are you sure you want to delete this data?</p>\n        <button @click=\"confirmDelete\">Delete</button>\n        <button @click=\"cancelDelete\">Cancel</button>\n      </div>\n    </div>\n\n    \n  <br>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    </div>\n  </div>\n\n\n\n</template>\n\n<script>\nimport {onMounted, ref} from \"vue\";\nimport axios from \"axios\";\nimport {useRouter} from \"vue-router\";\nimport VueCookies from 'vue-cookies';\n\nexport default{\n  name: \"Home\",\n  \n  data() {\n    return{\n      formData: {\n        name: \"\",\n        email: \"\",\n        // Add more form fields as needed\n      },\n      showDigitalDropdown: false,\n      responseData: null,\n      error: null,\n      successModalVisible: false,\n      userID: 'User123', // Replace 'User123' with your user ID\n        userToken: 'UserToken123', // Replace 'UserToken123' with your user token\n        plcItems: [\n          {\n            id: 1,\n            name: 'Primary Treatment Plant Tank 1 (OMRON PLC)',\n            token: 'Token 1',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '101', description: 'Pressure Alarm', editing: false ,\n                  bitAddresses: [\n                  {\"Bit Address\": \"101.00\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.01\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.02\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.03\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.04\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.05\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.06\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.07\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.08\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.09\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.10\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.11\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.12\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.13\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.14\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"101.15\", \"Description\": \"Alarm\", \"Status\": 1},\n                  // ... other bitAddresses for this address\n                ]\n              },\n              { name: '102', description: 'pH Alarm', editing: false,\n              bitAddresses: [\n              { \"Bit Address\": \"102.00\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.01\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.02\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.03\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.04\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.05\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.06\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.07\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.08\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.09\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.10\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.11\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.12\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.13\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.14\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"102.15\", \"Description\": \"Alarm\", \"Status\": 1},\n                  // ... other bitAddresses for this address\n              ]},\n              { name: '103', description: 'Temperature Alarm', editing: false,\n              bitAddresses: [\n              {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\n                  // ... other bitAddresses for this address\n                ]},\n              { name: '104', description: 'Level Alarm', editing: false,\n                  bitAddresses: [\n                  {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\n                      // ... other bitAddresses for this address\n                ]},\n              { name: '105', description: 'Security Alarm', editing: false,\n              bitAddresses: [\n              {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\n                  // ... other bitAddresses for this address\n                ]\n              },\n              { name: '106', description: 'Fire Alarm', editing: false,\n              bitAddresses: [\n              {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\n                  // ... other bitAddresses for this address\n                ]},\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 2,\n            name: 'Primary Treatment Plant Tank 2 (Siemen PLC)',\n            token: 'Token 2',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '0', description: 'Description for Address 1 in PLC 2', editing: false,\n              bitAddresses: [\n                  {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\n                  {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\n\n                  // ... other bitAddresses for this address\n                ]\n            },\n              { name: '1', description: 'Description for Address 2 in PLC 2', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 3,\n            name: 'Primary Treatment Plant Tank 3 (Delta PLC)',\n            token: 'Token 3',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 3', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 3', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 4,\n            name: 'Secondary Treatment Plant Tank 1 (Mitsubushi PLC)',\n            token: 'Token 4',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 5,\n            name: 'Secondary Treatment Plant Tank 2 (ABB PLC)',\n            token: 'Token 5',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 6,\n            name: 'Secondary Treatment Plant Tank 3 (Burkert PLC)',\n            token: 'Token 6',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 7,\n            name: 'Tertiary Treatment Plant Tank 1 (Amsamotion PLC)',\n            token: 'Token 7',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 8,\n            name: 'Tertiary Treatment Plant Tank 2 (HFCA PLC)',\n            token: 'Token 8',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 9,\n            name: 'Tertiary Treatment Plant Tank 3 (Allen Bradley PLC)',\n            token: 'Token 9',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 10,\n            name: 'Advanced Treatment Plant Tank 1 (Schneider PLC)',\n            token: 'Token 10',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 11,\n            name: 'Advanced Treatment Plant Tank 2 (Toshiba PLC)',\n            token: 'Token 11',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          {\n            id: 12,\n            name: 'Advanced Treatment Plant Tank 3 (Keyence PLC)',\n            token: 'Token 12',\n            editingToken: false,\n            newToken: '',\n            showDropdown: false,\n            addresses: [\n              { name: 'Address 1', description: 'Description for Address 1 in PLC 4', editing: false },\n              { name: 'Address 2', description: 'Description for Address 2 in PLC 4', editing: false },\n              // Add more addresses with descriptions here\n            ],\n          },\n          // Add more PLC items here as needed\n        ],\n        newPLCName: '',\n        newPLCToken: '',\n        newAddress: { name: '', description: '' },\n    }\n  },\n  mounted() {\n    // Making a GET request\n    axios.get('http://localhost:8089/plc')\n      .then(response => {\n        this.responseData = response.data;\n        for (let i = 0; i < response.data.length; i++) {\n          console.log(response.data[i].name);\n        }\n        //console.log(response.data[0].addresses[0]);\n        //console.log(response.data[0].name);\n      })\n      .catch(error => {\n        this.error = error.message;\n      });\n  },\n  methods: {\n    showDeleteConfirmation(plcIndex, addressIndex) {\n    const confirmed = confirm(\"Are you sure you want to delete this address?\");\n    if (confirmed) {\n      this.deleteAddress(plcIndex, addressIndex);\n    }\n  },\n\n  toggleBitAddressVisibility(address, bitIndex) {\n      address.bitAddresses[bitIndex].visible = !address.bitAddresses[bitIndex].visible;\n    },\n\n    toggleDropdown(plcIndex) {\n      this.plcItems[plcIndex].showDigital = false;\n      this.plcItems[plcIndex].showAnalog = false;\n    },\n    toggleAddressDropdown(plcIndex, type) {\n      if (type === 'Digital') {\n        this.plcItems[plcIndex].showDigital = !this.plcItems[plcIndex].showDigital;\n        this.plcItems[plcIndex].showAnalog = false;\n      } else if (type === 'Analog') {\n        this.plcItems[plcIndex].showAnalog = !this.plcItems[plcIndex].showAnalog;\n        this.plcItems[plcIndex].showDigital = false;\n      }\n    },\n//\nsaveData() {\n      // Simulate saving data to the server (replace this with your actual API call)\n      // For example, using Axios:\n      // axios.post('/api/saveData', this.formData)\n      //   .then((response) => {\n      //     // Handle success\n      //     this.showSuccessModal();\n      //     // Clear the form data after successful submission\n      //     this.formData = {};\n      //   })\n      //   .catch((error) => {\n      //     // Handle error\n      //   });\n\n      // Simulate success for this example\n      this.showSuccessModal();\n      this.formData = {}; // Clear the form data after successful submission\n    },\n    showSuccessModal() {\n      this.successModalVisible = true;\n    },\n    closeSuccessModal() {\n      this.successModalVisible = false;\n    },\n    showDigitalDropdown(){\n      this.showDigitalDropdown = !this.showDigitalDropdown;\n      //showDropdown = true;\n      if(showDropdown){\n        showDropdown = false;\n      }else{\n        showDropdown = true;\n      }\n\n    },\n    fetchOptions() {\n      // Simulate fetching JSON data (replace with your actual API call)\n      const jsonData = [\n        { \"id\": 1, \"name\": \"Option 1\" },\n        { \"id\": 2, \"name\": \"Option 2\" },\n        { \"id\": 3, \"name\": \"Option 3\" }\n      ];\n      this.dropdownOptions = jsonData;\n    },\n\n//\n  \n    toggleDropdown(plcIndex) {\n          this.plcItems[plcIndex].showDropdown = !this.plcItems[plcIndex].showDropdown;\n          //this.plcList[plcIndex].showDigital = !this.plcList[plcIndex].showDigital;\n          //this.plcList[plcIndex].showAnalog = !this.plcList[plcIndex].showAnalog;\n        },\n        deletePLC(plcIndex) {\n          this.plcItems.splice(plcIndex, 1);\n        },\n        addPLC() {\n          if (this.newPLCName.trim() !== '' && this.newPLCToken.trim() !== '') {\n                  const isDuplicateToken = this.plcItems.some(\n                (plcItem) => plcItem.token === this.newPLCToken\n              );\n\n              if (isDuplicateToken) {\n                // Display an error message or take any action to handle the duplicate token\n                alert('Token is already used in another PLC. Please use a different token.');\n                return;\n              }\n\n\n            this.plcItems.push({\n              id: this.plcItems.length + 1,\n              name: this.newPLCName,\n              token: this.newPLCToken,\n              editingToken: false,\n              newToken: '',\n              showDropdown: false,\n              addresses: [],\n            });\n            this.newPLCName = '';\n            this.newPLCToken = '';\n            \n          }\n        },\n        addAddress(plcIndex) {\n          if (this.newAddress.name.trim() !== '' && this.newAddress.description.trim() !== '') {\n            this.plcItems[plcIndex].addresses.push({\n              name: this.newAddress.name,\n              description: this.newAddress.description,\n              editing: false,\n            });\n            this.newAddress = { name: '', description: '' };\n          }\n        },\n        deleteAddress(plcIndex, addressIndex) {\n          this.plcItems[plcIndex].addresses.splice(addressIndex, 1);\n        },\n        editAddress(address) {\n          address.editing = true;\n        },\n        saveAddress(address) {\n          address.editing = false;\n          this.showSuccessModal();\n\n        },\n        cancelEdit(address) {\n          address.editing = false;\n        },\n        editPLCToken(plc) {\n          plc.editingToken = true;\n          plc.newToken = plc.token;\n        },\n\n        /*\n\n\n\n        */\n       savePLCToken(plc) {\n      // Check if the new token is not already used in any other PLC\n      const isDuplicateToken = this.plcItems.some(\n        (plcItem) => plcItem !== plc && plcItem.token === plc.newToken\n      );\n\n      if (isDuplicateToken) {\n        // Display an error message or take any action to handle the duplicate token\n        alert('Token is already used in another PLC. Please use a different token.');\n        return;\n      }\n\n      plc.token = plc.newToken;\n      plc.editingToken = false;\n      plc.newToken = '';\n      this.showSuccessModal();\n    },\n\n\n        cancelEditPLCToken(plc) {\n          plc.editingToken = false;\n          plc.newToken = '';\n        },\n\n        showDeletePLCConfirmation(plcIndex) {\n        const confirmed = confirm(\"Are you sure you want to delete this PLC?\");\n        if (confirmed) {\n          this.deletePLC(plcIndex);\n        }\n      },\n\n  },\n  created() {\n    // Fetch options when the component is created\n    this.fetchOptions();\n  }\n  \n}\n\n\n</script>\n\n<style>\n  .modal {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 9999; /* Set the z-index to place the modal on top */\n  }\n\n  .modal-content {\n    background-color: #fde2e8; /* Set the background color to white-pink */\n    border: 2px solid #ff1493; /* Add a 2px border with pink color */\n    padding: 20px;\n    border-radius: 5px;\n    color:black;\n  }\n\n\n  .modal-content button {\n    /* Add styles for the \"Close\" button */\n    border: 1px solid #000; /* Black border */\n    padding: 8px 12px; /* Adjust padding as needed */\n    background-color: #fff; /* White background */\n    color: #000; /* Black text color */\n    cursor: pointer;\n    border-radius: 5px;\n  }\n\n  .modal-content button:hover {\n    background-color: #000; /* Change background color on hover */\n    color: #fff; /* Change text color on hover */\n  }\n\n/* Styling for the black alert button */\n.dark-cancel-button {\n  padding: 10px 20px;\n  background-color: black; /* Change the background color to black */\n  color: white;\n  border: 2px solid darkgray; /* Change the border color to a darker shade of gray */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.dark-cancel-button:hover {\n  background-color: darkgray; /* Change the hover background color to a darker shade of gray */\n}\n\n/* On click effect */\n.dark-cancel-button:active {\n  background-color: dimgray; /* Use a darker shade of gray on click */\n}\n\n\n\n/* Styling for the purple alert button */\n.purple-save-button {\n  padding: 10px 20px;\n  background-color: purple; /* Change the background color to purple */\n  color: white;\n  border: 2px solid darkpurple; /* Change the border color to a darker shade of purple */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.purple-save-button:hover {\n  background-color: darkpurple; /* Change the hover background color to a darker shade of purple */\n}\n\n/* On click effect */\n.purple-save-button:active {\n  background-color: #800080; /* Use a darker shade of purple on click (here using hex code) */\n}\n\n\n\n\n/* Styling for the grass green alert button */\n.grass-green-add-button {\n  padding: 10px 20px;\n  background-color: #3CB371; /* Use your preferred grass green color code */\n  color: white;\n  border: 2px solid #2E8B57; /* Use a slightly darker shade of grass green for the border */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.grass-green-add-button:hover {\n  background-color: #2E8B57; /* Use a slightly darker shade of grass green on hover */\n}\n\n/* On click effect */\n.grass-green-add-button:active {\n  background-color: #228B22; /* Use a darker shade of grass green on click */\n}\n\n\n/* Styling for the ocean blue alert button */\n.ocean-blue-edit-button {\n  padding: 10px 20px;\n  background-color: #007BAC; /* Use your preferred ocean blue color code */\n  color: white;\n  border: 2px solid #005A80; /* Use a slightly darker shade of ocean blue for the border */\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.ocean-blue-edit-button:hover {\n  background-color: #005A80; /* Use a slightly darker shade of ocean blue on hover */\n}\n\n/* On click effect */\n.ocean-blue-edit-button:active {\n  background-color: #00416A; /* Use a darker shade of ocean blue on click */\n}\n\n/* Styling for the red alert button */\n.red-alert-button {\n  padding: 10px 20px;\n  background-color: red;\n  color: white;\n  border: 2px solid darkred;\n  border-radius: 5px;\n  cursor: pointer;\n  font-size: 16px;\n}\n\n/* On hover effect */\n.red-alert-button:hover {\n  background-color: darkred;\n}\n\n/* On click effect */\n.red-alert-button:active {\n  background-color: crimson;\n}\n\n\n\n.sidebar {\n  width: 200px;\n  position: fixed; /* Position the sidebar as fixed */\n  top: 0;\n  bottom: 0; /* Extend the sidebar to the bottom */\n  left: 0;\n  overflow-y: auto; /* Enable vertical scrolling if content overflows */\n  background-color: #111;\n  padding-top: 20px;\n  padding-bottom: 20px; /* Add padding at the bottom of the sidebar */\n  color: white; /* Set text color */\n  \n}\n\n.sidebar-content {\n  /* Adjust padding as needed */\n  padding: 20px;\n}\n\n.sidebar a {\n  display: block;\n  color: white;\n  padding: 16px;\n  text-decoration: none;\n}\n\n.sidebar a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n/* Main content styles */\n.main {\n  margin-left: 200px; /* Same as the width of the sidebar */\n  padding: 20px;\n}\n\ntable {\n  border-collapse: collapse;\n  width: 100%;\n}\n\nth, td {\n  border: 1px solid black;\n  padding: 8px;\n  text-align: left;\n}\n\n\n/* Navbar styles */\n.navbar {\n  background-color: #333;\n  overflow: hidden;\n  width: 100%;\n  position: fixed; /* Position the navbar as fixed */\n  top: 0; /* Place the navbar at the top */\n  left: 200px; /* Align with the sidebar */\n  z-index: 2; /* Add z-index to position the navbar above the main content */\n}\n\n.navbar a {\n  float: left;\n  display: block;\n  color: white;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n}\n\n.navbar a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n/* Right-aligned logout button */\n.logout {\n  display: flex;\n  align-items: center;\n}\n\n.logout a {\n  color: white;\n  padding: 14px 16px;\n  text-decoration: none;\n}\n\n.logout a:hover {\n  background-color: #ddd;\n  color: black;\n}\n\n\n\n/* Style for the dropdown buttons */\n.dropdown-button {\n  margin-top: 10px; /* Add margin to the top */\n  margin-bottom: 10px; /* Add margin to the bottom */\n  padding: 5px 10px; /* Adjust padding as needed */\n  color: black; /* Black text color */\n  cursor: pointer;\n  border-radius: 5px;\n  text-align: center; /* Center-align the button content */\n\n}\n\n.dropdown-option {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  border: none;\n  text-align: left;\n  cursor: pointer;\n}\n\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}