{"ast":null,"code":"import PLCComponent from './PLCComponent.vue';\nimport DigitalButton from './DigitalButton.vue';\nimport AnalogButton from './AnalogButton.vue';\nimport DigitalInfo from './DigitalInfo.vue';\nimport AnalogInfo from './AnalogInfo.vue';\nimport BitInfo from './BitInfo.vue';\nexport default {\n  components: {\n    PLCComponent,\n    DigitalButton,\n    AnalogButton,\n    DigitalInfo,\n    AnalogInfo,\n    BitInfo\n  },\n  data() {\n    return {\n      plcList: [\n        // Initialize your PLC data objects here\n        // { showDigital: false, showAnalog: false, ... }\n      ]\n    };\n  },\n  methods: {\n    togglePLC(index) {\n      // Toggle the PLC's visibility properties\n      this.plcList[index].showDigital = !this.plcList[index].showDigital;\n      this.plcList[index].showAnalog = !this.plcList[index].showAnalog;\n    },\n    showDigitalInfo(index) {\n      // Implement logic to show digital information\n      this.plcList[index].showDigitalInfo = true;\n      this.plcList[index].showAnalogInfo = false;\n      this.plcList[index].showBitInfo = false;\n    },\n    showAnalogInfo(index) {\n      // Implement logic to show analog information\n      this.plcList[index].showDigitalInfo = false;\n      this.plcList[index].showAnalogInfo = true;\n      this.plcList[index].showBitInfo = false;\n    }\n    // Add similar methods for showing bit info, if needed\n  }\n};","map":{"version":3,"names":["PLCComponent","DigitalButton","AnalogButton","DigitalInfo","AnalogInfo","BitInfo","components","data","plcList","methods","togglePLC","index","showDigital","showAnalog","showDigitalInfo","showAnalogInfo","showBitInfo"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <plc-component v-for=\"(plc, index) in plcList\" :key=\"index\" @toggle=\"togglePLC(index)\">\r\n        <digital-button v-if=\"plc.showDigital\" @click=\"showDigitalInfo(index)\">Digital</digital-button>\r\n        <analog-button v-if=\"plc.showAnalog\" @click=\"showAnalogInfo(index)\">Analog</analog-button>\r\n  \r\n        <digital-info v-if=\"plc.showDigitalInfo\">{{ plc.digitalAddress }}</digital-info>\r\n        <analog-info v-if=\"plc.showAnalogInfo\">{{ plc.analogAddress }}</analog-info>\r\n        <bit-info v-if=\"plc.showBitInfo\">{{ plc.bitAddress }}</bit-info>\r\n      </plc-component>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import PLCComponent from './PLCComponent.vue';\r\n  import DigitalButton from './DigitalButton.vue';\r\n  import AnalogButton from './AnalogButton.vue';\r\n  import DigitalInfo from './DigitalInfo.vue';\r\n  import AnalogInfo from './AnalogInfo.vue';\r\n  import BitInfo from './BitInfo.vue';\r\n  \r\n  export default {\r\n    components: {\r\n      PLCComponent,\r\n      DigitalButton,\r\n      AnalogButton,\r\n      DigitalInfo,\r\n      AnalogInfo,\r\n      BitInfo,\r\n    },\r\n    data() {\r\n      return {\r\n        plcList: [\r\n          // Initialize your PLC data objects here\r\n          // { showDigital: false, showAnalog: false, ... }\r\n        ],\r\n      };\r\n    },\r\n    methods: {\r\n      togglePLC(index) {\r\n        // Toggle the PLC's visibility properties\r\n        this.plcList[index].showDigital = !this.plcList[index].showDigital;\r\n        this.plcList[index].showAnalog = !this.plcList[index].showAnalog;\r\n      },\r\n      showDigitalInfo(index) {\r\n        // Implement logic to show digital information\r\n        this.plcList[index].showDigitalInfo = true;\r\n        this.plcList[index].showAnalogInfo = false;\r\n        this.plcList[index].showBitInfo = false;\r\n      },\r\n      showAnalogInfo(index) {\r\n        // Implement logic to show analog information\r\n        this.plcList[index].showDigitalInfo = false;\r\n        this.plcList[index].showAnalogInfo = true;\r\n        this.plcList[index].showBitInfo = false;\r\n      },\r\n      // Add similar methods for showing bit info, if needed\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":"AAcE,OAAOA,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,aAAY,MAAO,qBAAqB;AAC/C,OAAOC,YAAW,MAAO,oBAAoB;AAC7C,OAAOC,WAAU,MAAO,mBAAmB;AAC3C,OAAOC,UAAS,MAAO,kBAAkB;AACzC,OAAOC,OAAM,MAAO,eAAe;AAEnC,eAAe;EACbC,UAAU,EAAE;IACVN,YAAY;IACZC,aAAa;IACbC,YAAY;IACZC,WAAW;IACXC,UAAU;IACVC;EACF,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,OAAO,EAAE;QACP;QACA;MAAA;IAEJ,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,SAASA,CAACC,KAAK,EAAE;MACf;MACA,IAAI,CAACH,OAAO,CAACG,KAAK,CAAC,CAACC,WAAU,GAAI,CAAC,IAAI,CAACJ,OAAO,CAACG,KAAK,CAAC,CAACC,WAAW;MAClE,IAAI,CAACJ,OAAO,CAACG,KAAK,CAAC,CAACE,UAAS,GAAI,CAAC,IAAI,CAACL,OAAO,CAACG,KAAK,CAAC,CAACE,UAAU;IAClE,CAAC;IACDC,eAAeA,CAACH,KAAK,EAAE;MACrB;MACA,IAAI,CAACH,OAAO,CAACG,KAAK,CAAC,CAACG,eAAc,GAAI,IAAI;MAC1C,IAAI,CAACN,OAAO,CAACG,KAAK,CAAC,CAACI,cAAa,GAAI,KAAK;MAC1C,IAAI,CAACP,OAAO,CAACG,KAAK,CAAC,CAACK,WAAU,GAAI,KAAK;IACzC,CAAC;IACDD,cAAcA,CAACJ,KAAK,EAAE;MACpB;MACA,IAAI,CAACH,OAAO,CAACG,KAAK,CAAC,CAACG,eAAc,GAAI,KAAK;MAC3C,IAAI,CAACN,OAAO,CAACG,KAAK,CAAC,CAACI,cAAa,GAAI,IAAI;MACzC,IAAI,CAACP,OAAO,CAACG,KAAK,CAAC,CAACK,WAAU,GAAI,KAAK;IACzC;IACA;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}