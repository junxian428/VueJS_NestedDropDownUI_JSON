{"ast":null,"code":"import { openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  key: 1\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = [\"onClick\"];\nconst _hoisted_6 = {\n  key: 1\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_createElementVNode(\"tbody\", null, [_createElementVNode(\"tr\", null, [_createElementVNode(\"td\", null, [!$data.expandedPlcRows[0] ? (_openBlock(), _createElementBlock(\"button\", {\n    key: 0,\n    onClick: _cache[0] || (_cache[0] = $event => $options.expandPlcRow(0))\n  }, \"Show PLC\")) : (_openBlock(), _createElementBlock(\"span\", _hoisted_1, _toDisplayString($data.plcs[0].name), 1 /* TEXT */))])]), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.expandedPlcRows, (addresses, plcIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: plcIndex\n    }, [addresses ? (_openBlock(), _createElementBlock(\"td\", _hoisted_2, [!$data.expandedAddressRows[plcIndex][0] ? (_openBlock(), _createElementBlock(\"button\", {\n      key: 0,\n      onClick: $event => $options.expandAddressRow(plcIndex, 0)\n    }, \"Show Address\", 8 /* PROPS */, _hoisted_3)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_4, _toDisplayString($data.plcs[plcIndex].addresses[0].name), 1 /* TEXT */))])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.expandedAddressRows, (bitAddresses, plcIndex) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: plcIndex\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(bitAddresses, (addressBits, addressIndex) => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: addressIndex\n      }, [!addressBits ? (_openBlock(), _createElementBlock(\"button\", {\n        key: 0,\n        onClick: $event => $options.expandBitAddressRow(plcIndex, addressIndex)\n      }, \"Show Bit Address\", 8 /* PROPS */, _hoisted_5)) : (_openBlock(), _createElementBlock(\"span\", _hoisted_6, _toDisplayString(addressBits), 1 /* TEXT */))]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","$data","expandedPlcRows","onClick","_cache","$event","$options","expandPlcRow","_hoisted_1","_toDisplayString","plcs","name","_Fragment","_renderList","addresses","plcIndex","key","_hoisted_2","expandedAddressRows","expandAddressRow","_hoisted_3","_hoisted_4","bitAddresses","addressBits","addressIndex","expandBitAddressRow","_hoisted_5","_hoisted_6"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>\r\n              <button @click=\"expandPlcRow(0)\" v-if=\"!expandedPlcRows[0]\">Show PLC</button>\r\n              <span v-else>{{ plcs[0].name }}</span>\r\n            </td>\r\n          </tr>\r\n          <tr v-for=\"(addresses, plcIndex) in expandedPlcRows\" :key=\"plcIndex\">\r\n            <td v-if=\"addresses\">\r\n              <button @click=\"expandAddressRow(plcIndex, 0)\" v-if=\"!expandedAddressRows[plcIndex][0]\">Show Address</button>\r\n              <span v-else>{{ plcs[plcIndex].addresses[0].name }}</span>\r\n            </td>\r\n          </tr>\r\n          <tr v-for=\"(bitAddresses, plcIndex) in expandedAddressRows\" :key=\"plcIndex\">\r\n            <td v-for=\"(addressBits, addressIndex) in bitAddresses\" :key=\"addressIndex\">\r\n              <button @click=\"expandBitAddressRow(plcIndex, addressIndex)\" v-if=\"!addressBits\">Show Bit Address</button>\r\n              <span v-else>{{ addressBits }}</span>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        expandedPlcRows: [],\r\n        expandedAddressRows: []\r\n      };\r\n    },\r\n    methods: {\r\n      expandPlcRow(plcIndex) {\r\n        this.expandedPlcRows[plcIndex] = true;\r\n        this.expandedAddressRows[plcIndex] = [];\r\n      },\r\n      expandAddressRow(plcIndex, addressIndex) {\r\n        this.expandedAddressRows[plcIndex][addressIndex] = true;\r\n      },\r\n      expandBitAddressRow(plcIndex, addressIndex) {\r\n        // Handle bit address expansion if needed\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";;;;;;;;;;;;;;;;uBACIA,mBAAA,CAuBM,cAtBJC,mBAAA,CAqBQ,gBApBNA,mBAAA,CAmBQ,gBAlBNA,mBAAA,CAKK,aAJHA,mBAAA,CAGK,a,CAFqCC,KAAA,CAAAC,eAAe,O,cAAvDH,mBAAA,CAA6E;;IAApEI,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEC,QAAA,CAAAC,YAAY;KAAgC,UAAQ,M,cACpER,mBAAA,CAAsC,QAAAS,UAAA,EAAAC,gBAAA,CAAtBR,KAAA,CAAAS,IAAI,IAAIC,IAAI,kB,wBAGhCZ,mBAAA,CAKKa,SAAA,QAAAC,WAAA,CAL+BZ,KAAA,CAAAC,eAAe,GAAvCY,SAAS,EAAEC,QAAQ;yBAA/BhB,mBAAA,CAKK;MALiDiB,GAAG,EAAED;IAAQ,IACvDD,SAAS,I,cAAnBf,mBAAA,CAGK,MAAAkB,UAAA,G,CAFmDhB,KAAA,CAAAiB,mBAAmB,CAACH,QAAQ,Q,cAAlFhB,mBAAA,CAA6G;;MAApGI,OAAK,EAAAE,MAAA,IAAEC,QAAA,CAAAa,gBAAgB,CAACJ,QAAQ;OAA+C,cAAY,iBAAAK,UAAA,M,cACpGrB,mBAAA,CAA0D,QAAAsB,UAAA,EAAAZ,gBAAA,CAA1CR,KAAA,CAAAS,IAAI,CAACK,QAAQ,EAAED,SAAS,IAAIH,IAAI,kB;qDAGpDZ,mBAAA,CAKKa,SAAA,QAAAC,WAAA,CALkCZ,KAAA,CAAAiB,mBAAmB,GAA9CI,YAAY,EAAEP,QAAQ;yBAAlChB,mBAAA,CAKK;MALwDiB,GAAG,EAAED;IAAQ,K,kBACxEhB,mBAAA,CAGKa,SAAA,QAAAC,WAAA,CAHqCS,YAAY,GAA1CC,WAAW,EAAEC,YAAY;2BAArCzB,mBAAA,CAGK;QAHoDiB,GAAG,EAAEQ;MAAY,I,CACJD,WAAW,I,cAA/ExB,mBAAA,CAA0G;;QAAjGI,OAAK,EAAAE,MAAA,IAAEC,QAAA,CAAAmB,mBAAmB,CAACV,QAAQ,EAAES,YAAY;SAAuB,kBAAgB,iBAAAE,UAAA,M,cACjG3B,mBAAA,CAAqC,QAAA4B,UAAA,EAAAlB,gBAAA,CAArBc,WAAW,kB"},"metadata":{},"sourceType":"module","externalDependencies":[]}