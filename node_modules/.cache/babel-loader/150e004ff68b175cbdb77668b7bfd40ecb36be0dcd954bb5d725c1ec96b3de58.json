{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = [\"onClick\"];\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = {\n  class: \"bit-address\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs, (plc, plcIndex) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: 'plc-' + plcIndex\n    }, [_createElementVNode(\"div\", {\n      class: \"plc\",\n      onClick: $event => _ctx.toggleExpansion('plc', plcIndex)\n    }, _toDisplayString(plc.name), 9 /* TEXT, PROPS */, _hoisted_1), $data.expandedLevels[plcIndex].plc ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(plc.addresses, (address, addressIndex) => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: 'address-' + plcIndex + '-' + addressIndex\n      }, [_createElementVNode(\"div\", {\n        class: \"address\",\n        onClick: $event => _ctx.toggleExpansion('address', plcIndex, addressIndex)\n      }, _toDisplayString(address.name), 9 /* TEXT, PROPS */, _hoisted_3), $data.expandedLevels[plcIndex].address[addressIndex] ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createTextVNode(\" Bit Addresses: \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(address.bitAddresses, bitAddress => {\n        return _openBlock(), _createElementBlock(\"div\", {\n          key: bitAddress\n        }, _toDisplayString(bitAddress), 1 /* TEXT */);\n      }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n    }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)]);\n  }), 128 /* KEYED_FRAGMENT */))]);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_renderList","$data","plcs","plc","plcIndex","key","_createElementVNode","onClick","$event","_ctx","toggleExpansion","name","_hoisted_1","expandedLevels","_hoisted_2","addresses","address","addressIndex","_hoisted_3","_hoisted_4","_hoisted_5","bitAddresses","bitAddress","_toDisplayString"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <div v-for=\"(plc, plcIndex) in plcs\" :key=\"'plc-' + plcIndex\">\r\n        <div class=\"plc\" @click=\"toggleExpansion('plc', plcIndex)\">\r\n          {{ plc.name }}\r\n        </div>\r\n        <div v-if=\"expandedLevels[plcIndex].plc\">\r\n          <div v-for=\"(address, addressIndex) in plc.addresses\" :key=\"'address-' + plcIndex + '-' + addressIndex\">\r\n            <div class=\"address\" @click=\"toggleExpansion('address', plcIndex, addressIndex)\">\r\n              {{ address.name }}\r\n            </div>\r\n            <div v-if=\"expandedLevels[plcIndex].address[addressIndex]\">\r\n              <div class=\"bit-address\">\r\n                Bit Addresses:\r\n                <div v-for=\"bitAddress in address.bitAddresses\" :key=\"bitAddress\">\r\n                  {{ bitAddress }}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        expandedLevels: [], // Initialize this in the created hook\r\n      };\r\n    },\r\n    created() {\r\n      this.expandedLevels = this.plcs.map(() => ({ plc: false, address: [] }));\r\n    },\r\n    methods: {\r\n      // Your methods here\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  \r\n  <style>\r\n  /* Add your styling here */\r\n  </style>\r\n  "],"mappings":";;;;;;;;;;EAYmBA,KAAK,EAAC;AAAa;;uBAXlCC,mBAAA,CAqBM,e,kBApBJA,mBAAA,CAmBMC,SAAA,QAAAC,WAAA,CAnByBC,KAAA,CAAAC,IAAI,GAAtBC,GAAG,EAAEC,QAAQ;yBAA1BN,mBAAA,CAmBM;MAnBgCO,GAAG,WAAWD;QAClDE,mBAAA,CAEM;MAFDT,KAAK,EAAC,KAAK;MAAEU,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,eAAe,QAAQN,QAAQ;wBACnDD,GAAG,CAACQ,IAAI,wBAAAC,UAAA,GAEFX,KAAA,CAAAY,cAAc,CAACT,QAAQ,EAAED,GAAG,I,cAAvCL,mBAAA,CAcM,OAAAgB,UAAA,I,kBAbJhB,mBAAA,CAYMC,SAAA,QAAAC,WAAA,CAZiCG,GAAG,CAACY,SAAS,GAAvCC,OAAO,EAAEC,YAAY;2BAAlCnB,mBAAA,CAYM;QAZiDO,GAAG,eAAeD,QAAQ,SAASa;UACxFX,mBAAA,CAEM;QAFDT,KAAK,EAAC,SAAS;QAAEU,OAAK,EAAAC,MAAA,IAAEC,IAAA,CAAAC,eAAe,YAAYN,QAAQ,EAAEa,YAAY;0BACzED,OAAO,CAACL,IAAI,wBAAAO,UAAA,GAENjB,KAAA,CAAAY,cAAc,CAACT,QAAQ,EAAEY,OAAO,CAACC,YAAY,K,cAAxDnB,mBAAA,CAOM,OAAAqB,UAAA,GANJb,mBAAA,CAKM,OALNc,UAKM,G,iBALmB,kBAEvB,I,kBAAAtB,mBAAA,CAEMC,SAAA,QAAAC,WAAA,CAFoBgB,OAAO,CAACK,YAAY,EAAlCC,UAAU;6BAAtBxB,mBAAA,CAEM;UAF2CO,GAAG,EAAEiB;QAAU,GAAAC,gBAAA,CAC3DD,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}