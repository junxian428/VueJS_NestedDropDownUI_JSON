{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Select PLC\", -1 /* HOISTED */);\nconst _hoisted_2 = [\"value\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Select Address\", -1 /* HOISTED */);\nconst _hoisted_4 = [\"value\"];\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"Select Bit Address\", -1 /* HOISTED */);\nconst _hoisted_6 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedPlc = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.selectPlc && $options.selectPlc(...args))\n  }, [_hoisted_1, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs, (plc, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: index\n    }, _toDisplayString(plc.name), 9 /* TEXT, PROPS */, _hoisted_2);\n  }), 256 /* UNKEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */), [[_vModelSelect, $data.selectedPlc]]), $data.selectedPlc !== null ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 0,\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.selectedAddress = $event),\n    onChange: _cache[3] || (_cache[3] = (...args) => $options.selectAddress && $options.selectAddress(...args))\n  }, [_hoisted_3, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs[$data.selectedPlc].addresses, (address, index) => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: index\n    }, _toDisplayString(address.name), 9 /* TEXT, PROPS */, _hoisted_4);\n  }), 256 /* UNKEYED_FRAGMENT */))], 544 /* HYDRATE_EVENTS, NEED_PATCH */)), [[_vModelSelect, $data.selectedAddress]]) : _createCommentVNode(\"v-if\", true), $data.selectedAddress !== null ? _withDirectives((_openBlock(), _createElementBlock(\"select\", {\n    key: 1,\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.selectedBitAddress = $event)\n  }, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getBitAddresses($data.selectedPlc, $data.selectedAddress), bitAddress => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      value: bitAddress\n    }, _toDisplayString(bitAddress), 9 /* TEXT, PROPS */, _hoisted_6);\n  }), 256 /* UNKEYED_FRAGMENT */))], 512 /* NEED_PATCH */)), [[_vModelSelect, $data.selectedBitAddress]]) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","value","_createElementBlock","$data","selectedPlc","$event","onChange","_cache","args","$options","selectPlc","_hoisted_1","_Fragment","_renderList","plcs","plc","index","_toDisplayString","name","_hoisted_2","selectedAddress","selectAddress","_hoisted_3","addresses","address","_hoisted_4","selectedBitAddress","_hoisted_5","getBitAddresses","bitAddress","_hoisted_6"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <select v-model=\"selectedPlc\" @change=\"selectPlc\">\r\n        <option value=\"\">Select PLC</option>\r\n        <option v-for=\"(plc, index) in plcs\" :value=\"index\">{{ plc.name }}</option>\r\n      </select>\r\n  \r\n      <select v-model=\"selectedAddress\" @change=\"selectAddress\" v-if=\"selectedPlc !== null\">\r\n        <option value=\"\">Select Address</option>\r\n        <option v-for=\"(address, index) in plcs[selectedPlc].addresses\" :value=\"index\">{{ address.name }}</option>\r\n      </select>\r\n  \r\n      <select v-model=\"selectedBitAddress\" v-if=\"selectedAddress !== null\">\r\n        <option value=\"\">Select Bit Address</option>\r\n        <option v-for=\"bitAddress in getBitAddresses(selectedPlc, selectedAddress)\" :value=\"bitAddress\">\r\n          {{ bitAddress }}\r\n        </option>\r\n      </select>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        selectedPlc: null,\r\n        selectedAddress: null,\r\n        selectedBitAddress: null\r\n      };\r\n    },\r\n    methods: {\r\n      selectPlc() {\r\n        this.selectedAddress = null;\r\n        this.selectedBitAddress = null;\r\n      },\r\n      selectAddress() {\r\n        this.selectedBitAddress = null;\r\n      },\r\n      getBitAddresses(plcIndex, addressIndex) {\r\n        if (plcIndex !== null && addressIndex !== null) {\r\n          return this.plcs[plcIndex].addresses[addressIndex].bitAddresses;\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAGQA,mBAAA,CAAoC;EAA5BC,KAAK,EAAC;AAAE,GAAC,YAAU;;gCAK3BD,mBAAA,CAAwC;EAAhCC,KAAK,EAAC;AAAE,GAAC,gBAAc;;gCAK/BD,mBAAA,CAA4C;EAApCC,KAAK,EAAC;AAAE,GAAC,oBAAkB;;;uBAZvCC,mBAAA,CAiBM,c,gBAhBJF,mBAAA,CAGS;+DAHQG,KAAA,CAAAC,WAAW,GAAAC,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,SAAA,IAAAD,QAAA,CAAAC,SAAA,IAAAF,IAAA,CAAS;MAC9CG,UAAoC,G,kBACpCT,mBAAA,CAA2EU,SAAA,QAAAC,WAAA,CAA5CV,KAAA,CAAAW,IAAI,GAAnBC,GAAG,EAAEC,KAAK;yBAA1Bd,mBAAA,CAA2E;MAArCD,KAAK,EAAEe;IAAK,GAAAC,gBAAA,CAAKF,GAAG,CAACG,IAAI,wBAAAC,UAAA;6FAFhDhB,KAAA,CAAAC,WAAW,E,GAKoCD,KAAA,CAAAC,WAAW,Y,+BAA3EF,mBAAA,CAGS;;+DAHQC,KAAA,CAAAiB,eAAe,GAAAf,MAAA;IAAGC,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAY,aAAA,IAAAZ,QAAA,CAAAY,aAAA,IAAAb,IAAA,CAAa;MACtDc,UAAwC,G,kBACxCpB,mBAAA,CAA0GU,SAAA,QAAAC,WAAA,CAAvEV,KAAA,CAAAW,IAAI,CAACX,KAAA,CAAAC,WAAW,EAAEmB,SAAS,GAA9CC,OAAO,EAAER,KAAK;yBAA9Bd,mBAAA,CAA0G;MAAzCD,KAAK,EAAEe;IAAK,GAAAC,gBAAA,CAAKO,OAAO,CAACN,IAAI,wBAAAO,UAAA;8FAF/EtB,KAAA,CAAAiB,eAAe,E,uCAKWjB,KAAA,CAAAiB,eAAe,Y,+BAA1DlB,mBAAA,CAKS;;+DALQC,KAAA,CAAAuB,kBAAkB,GAAArB,MAAA;MACjCsB,UAA4C,G,kBAC5CzB,mBAAA,CAESU,SAAA,QAAAC,WAAA,CAFoBJ,QAAA,CAAAmB,eAAe,CAACzB,KAAA,CAAAC,WAAW,EAAED,KAAA,CAAAiB,eAAe,GAA1DS,UAAU;yBAAzB3B,mBAAA,CAES;MAFoED,KAAK,EAAE4B;IAAU,GAAAZ,gBAAA,CACzFY,UAAU,wBAAAC,UAAA;8EAHA3B,KAAA,CAAAuB,kBAAkB,E"},"metadata":{},"sourceType":"module","externalDependencies":[]}