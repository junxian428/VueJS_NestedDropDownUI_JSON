{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createStaticVNode as _createStaticVNode } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"sidebar\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createStaticVNode(\"<br><div class=\\\"sidebar-content\\\"><p style=\\\"color:white;\\\"><button><a href=\\\"#/\\\">IoT Dashboard</a></button></p><br><p style=\\\"color:white;\\\"><u>Supported Protocol</u></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/MQTT\\\">MQTT Mosquitto Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">AWS IoT Core Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/HTTPS\\\">HTTPS API Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/GRPC\\\">GRPC Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Web Socket Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Modbus TCP Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">OPC UA Endpoint</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">COAP Endpoint</a></button></p><br><br><p style=\\\"color:white;\\\"><u>Official SDK Package</u></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Robomatics IoT SDK</a></button></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/IoTCore\\\">Third Party API</a></button></p><br><br><p style=\\\"color:white;\\\"><u>Developer Support</u></p><p style=\\\"color:white;\\\"><button><a href=\\\"#/Documentation\\\">Documentation</a></button></p><!-- Sidebar content --></div>\", 2);\nconst _hoisted_5 = {\n  class: \"navbar\"\n};\nconst _hoisted_6 = {\n  class: \"logout\"\n};\nconst _hoisted_7 = {\n  class: \"main\",\n  style: {\n    \"margin-top\": \"50px\",\n    \"color\": \"white\"\n  }\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"HTTPS Endpoint\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"img\", {\n  src: \"WEBSOCKET.jpg\",\n  style: {\n    \"width\": \"250px\"\n  }\n}, null, -1 /* HOISTED */);\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"div\", {\n  style: {\n    \"text-align\": \"left\"\n  }\n}, [/*#__PURE__*/_createElementVNode(\"p\", null, \"Endpoint : \"), /*#__PURE__*/_createElementVNode(\"p\", null, \"Port Number :\")], -1 /* HOISTED */);\nconst _hoisted_13 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_14 = {\n  class: \"modal-content\"\n};\nconst _hoisted_15 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Success!\", -1 /* HOISTED */);\nconst _hoisted_16 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Your data has been saved successfully.\", -1 /* HOISTED */);\nconst _hoisted_17 = {\n  key: 0,\n  class: \"modal\"\n};\nconst _hoisted_18 = {\n  class: \"modal-content\"\n};\nconst _hoisted_19 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Confirm Delete?\", -1 /* HOISTED */);\nconst _hoisted_20 = /*#__PURE__*/_createElementVNode(\"p\", null, \"Are you sure you want to delete this data?\", -1 /* HOISTED */);\nconst _hoisted_21 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"p\", null, \"User ID: \" + _toDisplayString($data.userID), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Token: \" + _toDisplayString($data.userToken), 1 /* TEXT */), _hoisted_3]), _createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.selectedLevel = 'Level 5 ERP')\n  }, \"Level 5 ERP\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.selectedLevel = 'Level 4 WMS')\n  }, \"Level 4 WMS\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.selectedLevel = 'Level 4 MES')\n  }, \"Level 4 MES\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.selectedLevel = 'Level 3 SCADA/ HMI')\n  }, \"Level 3 SCADA/ HMI\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[4] || (_cache[4] = $event => _ctx.selectedLevel = 'Level 2 PLC')\n  }, \"Level 2 PLC\"), _createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[5] || (_cache[5] = $event => _ctx.selectedLevel = 'Level 1 Sensor and Actuator')\n  }, \"Level 1 Sensor and Actuator\"), _createElementVNode(\"div\", _hoisted_6, [_createElementVNode(\"a\", {\n    href: \"#\",\n    onClick: _cache[6] || (_cache[6] = (...args) => _ctx.logout && _ctx.logout(...args))\n  }, \"Logout\")])]), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _hoisted_9, _hoisted_10, _hoisted_11, _hoisted_12, _createElementVNode(\"div\", null, [_createCommentVNode(\" Form \"), $data.successModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_13, [_createElementVNode(\"div\", _hoisted_14, [_hoisted_15, _hoisted_16, _createElementVNode(\"button\", {\n    onClick: _cache[7] || (_cache[7] = (...args) => $options.closeSuccessModal && $options.closeSuccessModal(...args))\n  }, \"Close\")])])) : _createCommentVNode(\"v-if\", true)]), _createCommentVNode(\" Confirmation Modal \"), _ctx.confirmationModalVisible ? (_openBlock(), _createElementBlock(\"div\", _hoisted_17, [_createElementVNode(\"div\", _hoisted_18, [_hoisted_19, _hoisted_20, _createElementVNode(\"button\", {\n    onClick: _cache[8] || (_cache[8] = (...args) => _ctx.confirmDelete && _ctx.confirmDelete(...args))\n  }, \"Delete\"), _createElementVNode(\"button\", {\n    onClick: _cache[9] || (_cache[9] = (...args) => _ctx.cancelDelete && _ctx.cancelDelete(...args))\n  }, \"Cancel\")])])) : _createCommentVNode(\"v-if\", true), _hoisted_21])]);\n}","map":{"version":3,"names":["id","class","style","_createElementVNode","src","_createElementBlock","_hoisted_1","_hoisted_2","_toDisplayString","$data","userID","userToken","_hoisted_3","_hoisted_5","href","onClick","_cache","$event","_ctx","selectedLevel","_hoisted_6","args","logout","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_createCommentVNode","successModalVisible","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","$options","closeSuccessModal","confirmationModalVisible","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","confirmDelete","cancelDelete","_hoisted_21"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\WebSocketView.vue"],"sourcesContent":["<template>\r\n\r\n\r\n\r\n\r\n\r\n    <div id=\"app\">\r\n      \r\n    \r\n      <div class=\"sidebar\">\r\n          <p>User ID: {{ userID }}</p>\r\n          <p>Token: {{ userToken }}</p>\r\n          <br>\r\n          <div class=\"sidebar-content\">\r\n    \r\n            <p style=\"color:white;\"><button><a href=\"#/\">IoT Dashboard</a></button></p>\r\n            <br>\r\n    \r\n          <p style=\"color:white;\"><u>Supported Protocol</u></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/MQTT\">MQTT Mosquitto Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">AWS IoT Core Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/HTTPS\">HTTPS API Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/GRPC\">GRPC Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Web Socket Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Modbus TCP Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">OPC UA Endpoint</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">COAP Endpoint</a></button></p>\r\n          <br>\r\n          <br>\r\n          <p style=\"color:white;\"><u>Official SDK Package</u></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Robomatics IoT SDK</a></button></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/IoTCore\">Third Party API</a></button></p>\r\n          <br>\r\n          <br>\r\n          <p style=\"color:white;\"><u>Developer Support</u></p>\r\n          <p style=\"color:white;\"><button><a href=\"#/Documentation\">Documentation</a></button></p>\r\n            <!-- Sidebar content -->\r\n            </div>\r\n        </div>\r\n    \r\n        <div class=\"navbar\">\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 5 ERP'\">Level 5 ERP</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 4 WMS'\">Level 4 WMS</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 4 MES'\">Level 4 MES</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 3 SCADA/ HMI'\">Level 3 SCADA/ HMI</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 2 PLC'\">Level 2 PLC</a>\r\n            <a href=\"#\" @click=\"selectedLevel = 'Level 1 Sensor and Actuator'\">Level 1 Sensor and Actuator</a>\r\n    \r\n          <div class=\"logout\">\r\n            <a href=\"#\" @click=\"logout\">Logout</a>\r\n          </div>\r\n    \r\n          </div>\r\n    \r\n    \r\n    \r\n        <div class=\"main\" style=\"margin-top:50px; color:white;\">\r\n            <h2>HTTPS Endpoint</h2>\r\n          <br>\r\n          <br>\r\n          <img src=\"WEBSOCKET.jpg\" style=\"width:250px;\">\r\n          <div style=\"text-align:left;\">\r\n                <p>Endpoint : </p>\r\n                <p>Port Number :</p>\r\n          </div>\r\n    \r\n    \r\n    \r\n    \r\n    \r\n          <div>\r\n        <!-- Form -->\r\n    \r\n            <div v-if=\"successModalVisible\" class=\"modal\">\r\n              <div class=\"modal-content\">\r\n                <h2>Success!</h2>\r\n                <p>Your data has been saved successfully.</p>\r\n                <button @click=\"closeSuccessModal\">Close</button>\r\n              </div>\r\n            </div>\r\n      </div>\r\n    \r\n    \r\n    \r\n    \r\n      <!-- Confirmation Modal -->\r\n      <div v-if=\"confirmationModalVisible\" class=\"modal\">\r\n          <div class=\"modal-content\">\r\n            <h2>Confirm Delete?</h2>\r\n            <p>Are you sure you want to delete this data?</p>\r\n            <button @click=\"confirmDelete\">Delete</button>\r\n            <button @click=\"cancelDelete\">Cancel</button>\r\n          </div>\r\n        </div>\r\n    \r\n        \r\n      <br>\r\n    \r\n    \r\n        \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n    \r\n\r\n    \r\n    \r\n        </div>\r\n      </div>\r\n    \r\n    \r\n    \r\n    </template>\r\n    \r\n    <script>\r\n    import {onMounted, ref} from \"vue\";\r\n    import axios from \"axios\";\r\n    import {useRouter} from \"vue-router\";\r\n    import VueCookies from 'vue-cookies';\r\n    \r\n    export default{\r\n      name: \"Home\",\r\n      \r\n      data() {\r\n        return{\r\n          formData: {\r\n            name: \"\",\r\n            email: \"\",\r\n            // Add more form fields as needed\r\n          },\r\n          showDigitalDropdown: false,\r\n          responseData: null,\r\n          error: null,\r\n          successModalVisible: false,\r\n          userID: 'User123', // Replace 'User123' with your user ID\r\n            userToken: 'UserToken123', // Replace 'UserToken123' with your user token\r\n            plcItems: [\r\n              {\r\n                id: 1,\r\n                name: 'Primary Treatment Plant Tank 1 (OMRON PLC)',\r\n                token: 'Token 1',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '101', description: 'Pressure Alarm', editing: false ,\r\n                      bitAddresses: [\r\n                      {\"Bit Address\": \"101.00\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.01\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.02\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.03\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.04\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.05\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.06\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.07\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.08\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.09\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.10\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.11\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.12\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.13\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.14\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"101.15\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      // ... other bitAddresses for this address\r\n                    ]\r\n                  },\r\n                  { name: '102', description: 'pH Alarm', editing: false,\r\n                  bitAddresses: [\r\n                  { \"Bit Address\": \"102.00\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.01\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.02\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.03\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.04\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.05\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.06\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.07\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.08\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.09\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.10\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.11\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.12\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.13\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.14\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"102.15\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      // ... other bitAddresses for this address\r\n                  ]},\r\n                  { name: '103', description: 'Temperature Alarm', editing: false,\r\n                  bitAddresses: [\r\n                  {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      // ... other bitAddresses for this address\r\n                    ]},\r\n                  { name: '104', description: 'Level Alarm', editing: false,\r\n                      bitAddresses: [\r\n                      {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                          // ... other bitAddresses for this address\r\n                    ]},\r\n                  { name: '105', description: 'Security Alarm', editing: false,\r\n                  bitAddresses: [\r\n                  {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      // ... other bitAddresses for this address\r\n                    ]\r\n                  },\r\n                  { name: '106', description: 'Fire Alarm', editing: false,\r\n                  bitAddresses: [\r\n                  {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      // ... other bitAddresses for this address\r\n                    ]},\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 2,\r\n                name: 'Primary Treatment Plant Tank 2 (Siemen PLC)',\r\n                token: 'Token 2',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '0', description: 'Description for Address 1 in PLC 2', editing: false,\r\n                  bitAddresses: [\r\n                      {\"Bit Address\": \"100.00\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.01\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.02\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.03\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.04\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.05\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.06\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.07\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.08\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.09\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.10\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.11\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.12\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.13\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.14\", \"Description\": \"Alarm\", \"Status\": 1},\r\n                      {\"Bit Address\": \"100.15\", \"Description\": \"Alarm\", \"Status\": 1},\r\n    \r\n                      // ... other bitAddresses for this address\r\n                    ]\r\n                },\r\n                  { name: '1', description: 'Description for Address 2 in PLC 2', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 3,\r\n                name: 'Primary Treatment Plant Tank 3 (Delta PLC)',\r\n                token: 'Token 3',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '100', description: 'Description for Address 1 in PLC 3', editing: false },\r\n                  { name: '101', description: 'Description for Address 2 in PLC 3', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 4,\r\n                name: 'Secondary Treatment Plant Tank 1 (Mitsubushi PLC)',\r\n                token: 'Token 4',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 5,\r\n                name: 'Secondary Treatment Plant Tank 2 (ABB PLC)',\r\n                token: 'Token 5',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 6,\r\n                name: 'Secondary Treatment Plant Tank 3 (Burkert PLC)',\r\n                token: 'Token 6',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 7,\r\n                name: 'Tertiary Treatment Plant Tank 1 (Amsamotion PLC)',\r\n                token: 'Token 7',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '100', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '101', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 8,\r\n                name: 'Tertiary Treatment Plant Tank 2 (HFCA PLC)',\r\n                token: 'Token 8',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 9,\r\n                name: 'Tertiary Treatment Plant Tank 3 (Allen Bradley PLC)',\r\n                token: 'Token 9',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 10,\r\n                name: 'Advanced Treatment Plant Tank 1 (Schneider PLC)',\r\n                token: 'Token 10',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 11,\r\n                name: 'Advanced Treatment Plant Tank 2 (Toshiba PLC)',\r\n                token: 'Token 11',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: '1', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: '2', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              {\r\n                id: 12,\r\n                name: 'Advanced Treatment Plant Tank 3 (Keyence PLC)',\r\n                token: 'Token 12',\r\n                editingToken: false,\r\n                newToken: '',\r\n                showDropdown: false,\r\n                addresses: [\r\n                  { name: 'Address 1', description: 'Description for Address 1 in PLC 4', editing: false },\r\n                  { name: 'Address 2', description: 'Description for Address 2 in PLC 4', editing: false },\r\n                  // Add more addresses with descriptions here\r\n                ],\r\n              },\r\n              // Add more PLC items here as needed\r\n            ],\r\n            newPLCName: '',\r\n            newPLCToken: '',\r\n            newAddress: { name: '', description: '' },\r\n        }\r\n      },\r\n      mounted() {\r\n        // Making a GET request\r\n        axios.get('http://localhost:8089/plc')\r\n          .then(response => {\r\n            this.responseData = response.data;\r\n            for (let i = 0; i < response.data.length; i++) {\r\n              console.log(response.data[i].name);\r\n            }\r\n            //console.log(response.data[0].addresses[0]);\r\n            //console.log(response.data[0].name);\r\n          })\r\n          .catch(error => {\r\n            this.error = error.message;\r\n          });\r\n      },\r\n      methods: {\r\n        showDeleteConfirmation(plcIndex, addressIndex) {\r\n        const confirmed = confirm(\"Are you sure you want to delete this address?\");\r\n        if (confirmed) {\r\n          this.deleteAddress(plcIndex, addressIndex);\r\n        }\r\n      },\r\n    \r\n      toggleBitAddressVisibility(address, bitIndex) {\r\n          address.bitAddresses[bitIndex].visible = !address.bitAddresses[bitIndex].visible;\r\n        },\r\n    \r\n        toggleDropdown(plcIndex) {\r\n          this.plcItems[plcIndex].showDigital = false;\r\n          this.plcItems[plcIndex].showAnalog = false;\r\n        },\r\n        toggleAddressDropdown(plcIndex, type) {\r\n          if (type === 'Digital') {\r\n            this.plcItems[plcIndex].showDigital = !this.plcItems[plcIndex].showDigital;\r\n            this.plcItems[plcIndex].showAnalog = false;\r\n          } else if (type === 'Analog') {\r\n            this.plcItems[plcIndex].showAnalog = !this.plcItems[plcIndex].showAnalog;\r\n            this.plcItems[plcIndex].showDigital = false;\r\n          }\r\n        },\r\n    //\r\n    saveData() {\r\n          // Simulate saving data to the server (replace this with your actual API call)\r\n          // For example, using Axios:\r\n          // axios.post('/api/saveData', this.formData)\r\n          //   .then((response) => {\r\n          //     // Handle success\r\n          //     this.showSuccessModal();\r\n          //     // Clear the form data after successful submission\r\n          //     this.formData = {};\r\n          //   })\r\n          //   .catch((error) => {\r\n          //     // Handle error\r\n          //   });\r\n    \r\n          // Simulate success for this example\r\n          this.showSuccessModal();\r\n          this.formData = {}; // Clear the form data after successful submission\r\n        },\r\n        showSuccessModal() {\r\n          this.successModalVisible = true;\r\n        },\r\n        closeSuccessModal() {\r\n          this.successModalVisible = false;\r\n        },\r\n        showDigitalDropdown(){\r\n          this.showDigitalDropdown = !this.showDigitalDropdown;\r\n          //showDropdown = true;\r\n          if(showDropdown){\r\n            showDropdown = false;\r\n          }else{\r\n            showDropdown = true;\r\n          }\r\n    \r\n        },\r\n        fetchOptions() {\r\n          // Simulate fetching JSON data (replace with your actual API call)\r\n          const jsonData = [\r\n            { \"id\": 1, \"name\": \"Option 1\" },\r\n            { \"id\": 2, \"name\": \"Option 2\" },\r\n            { \"id\": 3, \"name\": \"Option 3\" }\r\n          ];\r\n          this.dropdownOptions = jsonData;\r\n        },\r\n    \r\n    //\r\n      \r\n        toggleDropdown(plcIndex) {\r\n              this.plcItems[plcIndex].showDropdown = !this.plcItems[plcIndex].showDropdown;\r\n              //this.plcList[plcIndex].showDigital = !this.plcList[plcIndex].showDigital;\r\n              //this.plcList[plcIndex].showAnalog = !this.plcList[plcIndex].showAnalog;\r\n            },\r\n            deletePLC(plcIndex) {\r\n              this.plcItems.splice(plcIndex, 1);\r\n            },\r\n            addPLC() {\r\n              if (this.newPLCName.trim() !== '' && this.newPLCToken.trim() !== '') {\r\n                      const isDuplicateToken = this.plcItems.some(\r\n                    (plcItem) => plcItem.token === this.newPLCToken\r\n                  );\r\n    \r\n                  if (isDuplicateToken) {\r\n                    // Display an error message or take any action to handle the duplicate token\r\n                    alert('Token is already used in another PLC. Please use a different token.');\r\n                    return;\r\n                  }\r\n    \r\n    \r\n                this.plcItems.push({\r\n                  id: this.plcItems.length + 1,\r\n                  name: this.newPLCName,\r\n                  token: this.newPLCToken,\r\n                  editingToken: false,\r\n                  newToken: '',\r\n                  showDropdown: false,\r\n                  addresses: [],\r\n                });\r\n                this.newPLCName = '';\r\n                this.newPLCToken = '';\r\n                \r\n              }\r\n            },\r\n            addAddress(plcIndex) {\r\n              if (this.newAddress.name.trim() !== '' && this.newAddress.description.trim() !== '') {\r\n                this.plcItems[plcIndex].addresses.push({\r\n                  name: this.newAddress.name,\r\n                  description: this.newAddress.description,\r\n                  editing: false,\r\n                });\r\n                this.newAddress = { name: '', description: '' };\r\n              }\r\n            },\r\n            deleteAddress(plcIndex, addressIndex) {\r\n              this.plcItems[plcIndex].addresses.splice(addressIndex, 1);\r\n            },\r\n            editAddress(address) {\r\n              address.editing = true;\r\n            },\r\n            saveAddress(address) {\r\n              address.editing = false;\r\n              this.showSuccessModal();\r\n    \r\n            },\r\n            cancelEdit(address) {\r\n              address.editing = false;\r\n            },\r\n            editPLCToken(plc) {\r\n              plc.editingToken = true;\r\n              plc.newToken = plc.token;\r\n            },\r\n    \r\n            /*\r\n    \r\n    \r\n    \r\n            */\r\n           savePLCToken(plc) {\r\n          // Check if the new token is not already used in any other PLC\r\n          const isDuplicateToken = this.plcItems.some(\r\n            (plcItem) => plcItem !== plc && plcItem.token === plc.newToken\r\n          );\r\n    \r\n          if (isDuplicateToken) {\r\n            // Display an error message or take any action to handle the duplicate token\r\n            alert('Token is already used in another PLC. Please use a different token.');\r\n            return;\r\n          }\r\n    \r\n          plc.token = plc.newToken;\r\n          plc.editingToken = false;\r\n          plc.newToken = '';\r\n          this.showSuccessModal();\r\n        },\r\n    \r\n    \r\n            cancelEditPLCToken(plc) {\r\n              plc.editingToken = false;\r\n              plc.newToken = '';\r\n            },\r\n    \r\n            showDeletePLCConfirmation(plcIndex) {\r\n            const confirmed = confirm(\"Are you sure you want to delete this PLC?\");\r\n            if (confirmed) {\r\n              this.deletePLC(plcIndex);\r\n            }\r\n          },\r\n    \r\n      },\r\n      created() {\r\n        // Fetch options when the component is created\r\n        this.fetchOptions();\r\n      }\r\n      \r\n    }\r\n    \r\n    \r\n    </script>\r\n    \r\n    <style>\r\n      .modal {\r\n        position: fixed;\r\n        top: 0;\r\n        left: 0;\r\n        width: 100%;\r\n        height: 100%;\r\n        background-color: rgba(0, 0, 0, 0.5);\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n        z-index: 9999; /* Set the z-index to place the modal on top */\r\n      }\r\n    \r\n      .modal-content {\r\n        background-color: #fde2e8; /* Set the background color to white-pink */\r\n        border: 2px solid #ff1493; /* Add a 2px border with pink color */\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        color:black;\r\n      }\r\n    \r\n    \r\n      .modal-content button {\r\n        /* Add styles for the \"Close\" button */\r\n        border: 1px solid #000; /* Black border */\r\n        padding: 8px 12px; /* Adjust padding as needed */\r\n        background-color: #fff; /* White background */\r\n        color: #000; /* Black text color */\r\n        cursor: pointer;\r\n        border-radius: 5px;\r\n      }\r\n    \r\n      .modal-content button:hover {\r\n        background-color: #000; /* Change background color on hover */\r\n        color: #fff; /* Change text color on hover */\r\n      }\r\n    \r\n    /* Styling for the black alert button */\r\n    .dark-cancel-button {\r\n      padding: 10px 20px;\r\n      background-color: black; /* Change the background color to black */\r\n      color: white;\r\n      border: 2px solid darkgray; /* Change the border color to a darker shade of gray */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .dark-cancel-button:hover {\r\n      background-color: darkgray; /* Change the hover background color to a darker shade of gray */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .dark-cancel-button:active {\r\n      background-color: dimgray; /* Use a darker shade of gray on click */\r\n    }\r\n    \r\n    \r\n    \r\n    /* Styling for the purple alert button */\r\n    .purple-save-button {\r\n      padding: 10px 20px;\r\n      background-color: purple; /* Change the background color to purple */\r\n      color: white;\r\n      border: 2px solid darkpurple; /* Change the border color to a darker shade of purple */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .purple-save-button:hover {\r\n      background-color: darkpurple; /* Change the hover background color to a darker shade of purple */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .purple-save-button:active {\r\n      background-color: #800080; /* Use a darker shade of purple on click (here using hex code) */\r\n    }\r\n    \r\n    \r\n    \r\n    \r\n    /* Styling for the grass green alert button */\r\n    .grass-green-add-button {\r\n      padding: 10px 20px;\r\n      background-color: #3CB371; /* Use your preferred grass green color code */\r\n      color: white;\r\n      border: 2px solid #2E8B57; /* Use a slightly darker shade of grass green for the border */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .grass-green-add-button:hover {\r\n      background-color: #2E8B57; /* Use a slightly darker shade of grass green on hover */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .grass-green-add-button:active {\r\n      background-color: #228B22; /* Use a darker shade of grass green on click */\r\n    }\r\n    \r\n    \r\n    /* Styling for the ocean blue alert button */\r\n    .ocean-blue-edit-button {\r\n      padding: 10px 20px;\r\n      background-color: #007BAC; /* Use your preferred ocean blue color code */\r\n      color: white;\r\n      border: 2px solid #005A80; /* Use a slightly darker shade of ocean blue for the border */\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .ocean-blue-edit-button:hover {\r\n      background-color: #005A80; /* Use a slightly darker shade of ocean blue on hover */\r\n    }\r\n    \r\n    /* On click effect */\r\n    .ocean-blue-edit-button:active {\r\n      background-color: #00416A; /* Use a darker shade of ocean blue on click */\r\n    }\r\n    \r\n    /* Styling for the red alert button */\r\n    .red-alert-button {\r\n      padding: 10px 20px;\r\n      background-color: red;\r\n      color: white;\r\n      border: 2px solid darkred;\r\n      border-radius: 5px;\r\n      cursor: pointer;\r\n      font-size: 16px;\r\n    }\r\n    \r\n    /* On hover effect */\r\n    .red-alert-button:hover {\r\n      background-color: darkred;\r\n    }\r\n    \r\n    /* On click effect */\r\n    .red-alert-button:active {\r\n      background-color: crimson;\r\n    }\r\n    \r\n    \r\n    \r\n    .sidebar {\r\n      width: 200px;\r\n      position: fixed; /* Position the sidebar as fixed */\r\n      top: 0;\r\n      bottom: 0; /* Extend the sidebar to the bottom */\r\n      left: 0;\r\n      overflow-y: auto; /* Enable vertical scrolling if content overflows */\r\n      background-color: #111;\r\n      padding-top: 20px;\r\n      padding-bottom: 20px; /* Add padding at the bottom of the sidebar */\r\n      color: white; /* Set text color */\r\n      \r\n    }\r\n    \r\n    .sidebar-content {\r\n      /* Adjust padding as needed */\r\n      padding: 20px;\r\n    }\r\n    \r\n    .sidebar a {\r\n      display: block;\r\n      color: white;\r\n      padding: 16px;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .sidebar a:hover {\r\n      background-color: #ddd;\r\n      color: black;\r\n    }\r\n    \r\n    /* Main content styles */\r\n    .main {\r\n      margin-left: 200px; /* Same as the width of the sidebar */\r\n      padding: 20px;\r\n    }\r\n    \r\n    table {\r\n      border-collapse: collapse;\r\n      width: 100%;\r\n    }\r\n    \r\n    th, td {\r\n      border: 1px solid black;\r\n      padding: 8px;\r\n      text-align: left;\r\n    }\r\n    \r\n    \r\n    /* Navbar styles */\r\n    .navbar {\r\n      background-color: #333;\r\n      overflow: hidden;\r\n      width: 100%;\r\n      position: fixed; /* Position the navbar as fixed */\r\n      top: 0; /* Place the navbar at the top */\r\n      left: 200px; /* Align with the sidebar */\r\n      z-index: 2; /* Add z-index to position the navbar above the main content */\r\n    }\r\n    \r\n    .navbar a {\r\n      float: left;\r\n      display: block;\r\n      color: white;\r\n      text-align: center;\r\n      padding: 14px 16px;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .navbar a:hover {\r\n      background-color: #ddd;\r\n      color: black;\r\n    }\r\n    \r\n    /* Right-aligned logout button */\r\n    .logout {\r\n      display: flex;\r\n      align-items: center;\r\n    }\r\n    \r\n    .logout a {\r\n      color: white;\r\n      padding: 14px 16px;\r\n      text-decoration: none;\r\n    }\r\n    \r\n    .logout a:hover {\r\n      background-color: #ddd;\r\n      color: black;\r\n    }\r\n    \r\n    \r\n    \r\n    /* Style for the dropdown buttons */\r\n    .dropdown-button {\r\n      margin-top: 10px; /* Add margin to the top */\r\n      margin-bottom: 10px; /* Add margin to the bottom */\r\n      padding: 5px 10px; /* Adjust padding as needed */\r\n      color: black; /* Black text color */\r\n      cursor: pointer;\r\n      border-radius: 5px;\r\n      text-align: center; /* Center-align the button content */\r\n    \r\n    }\r\n    \r\n    .dropdown-option {\r\n      display: block;\r\n      width: 100%;\r\n      padding: 10px;\r\n      border: none;\r\n      text-align: left;\r\n      cursor: pointer;\r\n    }\r\n    \r\n    </style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}