{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"PLC\")])], -1 /* HOISTED */);\nconst _hoisted_2 = [\"onChange\"];\nconst _hoisted_3 = {\n  value: \"\"\n};\nconst _hoisted_4 = {\n  key: 0\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Address\")])], -1 /* HOISTED */);\nconst _hoisted_6 = [\"onChange\"];\nconst _hoisted_7 = {\n  value: \"\"\n};\nconst _hoisted_8 = {\n  key: 1\n};\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"Bit Address\")])], -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"table\", null, [_hoisted_1, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs, (plc, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.selectedPlcIndex = $event),\n      onChange: $event => $options.selectPlc(index)\n    }, [_createElementVNode(\"option\", _hoisted_3, _toDisplayString(plc.name), 1 /* TEXT */)], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_2), [[_vModelSelect, $data.selectedPlcIndex]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])]), $data.selectedPlcIndex !== null ? (_openBlock(), _createElementBlock(\"table\", _hoisted_4, [_hoisted_5, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs[$data.selectedPlcIndex].addresses, (address, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, [_withDirectives(_createElementVNode(\"select\", {\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.selectedAddressIndex = $event),\n      onChange: $event => $options.selectAddress(index)\n    }, [_createElementVNode(\"option\", _hoisted_7, _toDisplayString(address.name), 1 /* TEXT */)], 40 /* PROPS, HYDRATE_EVENTS */, _hoisted_6), [[_vModelSelect, $data.selectedAddressIndex]])])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $data.selectedAddressIndex !== null ? (_openBlock(), _createElementBlock(\"table\", _hoisted_8, [_hoisted_9, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.plcs[$data.selectedPlcIndex].addresses[$data.selectedAddressIndex].bitAddresses, (bitAddress, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(bitAddress), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["_createElementVNode","value","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","plcs","plc","index","key","selectedPlcIndex","$event","onChange","$options","selectPlc","_hoisted_3","_toDisplayString","name","_hoisted_4","_hoisted_5","addresses","address","selectedAddressIndex","selectAddress","_hoisted_7","_hoisted_8","_hoisted_9","bitAddresses","bitAddress"],"sources":["D:\\Project\\VUEJSSPRING_CRUD_JWT\\vue-crud-api-jwt-vuex-Digital-Analog\\src\\views\\test.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>PLC</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(plc, index) in plcs\" :key=\"index\">\r\n            <td>\r\n              <select v-model=\"selectedPlcIndex\" @change=\"selectPlc(index)\">\r\n                <option value=\"\">{{ plc.name }}</option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <table v-if=\"selectedPlcIndex !== null\">\r\n        <thead>\r\n          <tr>\r\n            <th>Address</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(address, index) in plcs[selectedPlcIndex].addresses\" :key=\"index\">\r\n            <td>\r\n              <select v-model=\"selectedAddressIndex\" @change=\"selectAddress(index)\">\r\n                <option value=\"\">{{ address.name }}</option>\r\n              </select>\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n  \r\n      <table v-if=\"selectedAddressIndex !== null\">\r\n        <thead>\r\n          <tr>\r\n            <th>Bit Address</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(bitAddress, index) in plcs[selectedPlcIndex].addresses[selectedAddressIndex].bitAddresses\" :key=\"index\">\r\n            <td>{{ bitAddress }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    data() {\r\n      return {\r\n        plcs: [\r\n          {\r\n            name: 'PLC 1',\r\n            addresses: [\r\n              {\r\n                name: 'Address 1',\r\n                bitAddresses: ['Bit 1', 'Bit 2']\r\n              },\r\n              // ... other addresses\r\n            ]\r\n          },\r\n          // ... other PLCs\r\n        ],\r\n        selectedPlcIndex: null,\r\n        selectedAddressIndex: null\r\n      };\r\n    },\r\n    methods: {\r\n      selectPlc(index) {\r\n        this.selectedPlcIndex = index;\r\n        this.selectedAddressIndex = null;\r\n      },\r\n      selectAddress(index) {\r\n        this.selectedAddressIndex = index;\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAGQA,mBAAA,CAIQ,gB,aAHNA,mBAAA,CAEK,a,aADHA,mBAAA,CAAY,YAAR,KAAG,E;;;EAOKC,KAAK,EAAC;AAAE;;;;gCAQxBD,mBAAA,CAIQ,gB,aAHNA,mBAAA,CAEK,a,aADHA,mBAAA,CAAgB,YAAZ,SAAO,E;;;EAOCC,KAAK,EAAC;AAAE;;;;gCAQxBD,mBAAA,CAIQ,gB,aAHNA,mBAAA,CAEK,a,aADHA,mBAAA,CAAoB,YAAhB,aAAW,E;;;uBAtCvBE,mBAAA,CA+CM,cA9CJF,mBAAA,CAeQ,gBAdNG,UAIQ,EACRH,mBAAA,CAQQ,iB,kBAPNE,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CANsBC,KAAA,CAAAC,IAAI,GAAnBC,GAAG,EAAEC,KAAK;yBAAtBP,mBAAA,CAMK;MAN6BQ,GAAG,EAAED;IAAK,IAC1CT,mBAAA,CAIK,a,gBAHHA,mBAAA,CAES;iEAFQM,KAAA,CAAAK,gBAAgB,GAAAC,MAAA;MAAGC,QAAM,EAAAD,MAAA,IAAEE,QAAA,CAAAC,SAAS,CAACN,KAAK;QACzDT,mBAAA,CAAwC,UAAxCgB,UAAwC,EAAAC,gBAAA,CAApBT,GAAG,CAACU,IAAI,iB,gEADbZ,KAAA,CAAAK,gBAAgB,E;sCAQ5BL,KAAA,CAAAK,gBAAgB,a,cAA7BT,mBAAA,CAeQ,SAAAiB,UAAA,GAdNC,UAIQ,EACRpB,mBAAA,CAQQ,iB,kBAPNE,mBAAA,CAMKE,SAAA,QAAAC,WAAA,CAN0BC,KAAA,CAAAC,IAAI,CAACD,KAAA,CAAAK,gBAAgB,EAAEU,SAAS,GAAnDC,OAAO,EAAEb,KAAK;yBAA1BP,mBAAA,CAMK;MAN6DQ,GAAG,EAAED;IAAK,IAC1ET,mBAAA,CAIK,a,gBAHHA,mBAAA,CAES;iEAFQM,KAAA,CAAAiB,oBAAoB,GAAAX,MAAA;MAAGC,QAAM,EAAAD,MAAA,IAAEE,QAAA,CAAAU,aAAa,CAACf,KAAK;QACjET,mBAAA,CAA4C,UAA5CyB,UAA4C,EAAAR,gBAAA,CAAxBK,OAAO,CAACJ,IAAI,iB,gEADjBZ,KAAA,CAAAiB,oBAAoB,E;2EAQhCjB,KAAA,CAAAiB,oBAAoB,a,cAAjCrB,mBAAA,CAWQ,SAAAwB,UAAA,GAVNC,UAIQ,EACR3B,mBAAA,CAIQ,iB,kBAHNE,mBAAA,CAEKE,SAAA,QAAAC,WAAA,CAF6BC,KAAA,CAAAC,IAAI,CAACD,KAAA,CAAAK,gBAAgB,EAAEU,SAAS,CAACf,KAAA,CAAAiB,oBAAoB,EAAEK,YAAY,GAAzFC,UAAU,EAAEpB,KAAK;yBAA7BP,mBAAA,CAEK;MAFmGQ,GAAG,EAAED;IAAK,IAChHT,mBAAA,CAAyB,YAAAiB,gBAAA,CAAlBY,UAAU,iB"},"metadata":{},"sourceType":"module","externalDependencies":[]}